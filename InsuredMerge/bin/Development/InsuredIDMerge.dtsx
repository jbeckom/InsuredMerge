<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/14/2010 3:59:36 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="IND-SSIS1DT"
  DTS:CreatorName="OLYMPUS\yshi613"
  DTS:DelayValidation="True"
  DTS:DTSID="{B399E5E2-B846-4BFA-9ED0-B0ED16C21CE9}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="14.0.3002.107"
  DTS:LocaleID="1033"
  DTS:ObjectName="Insured ID Merge"
  DTS:PackageType="5"
  DTS:VersionBuild="226"
  DTS:VersionGUID="{276CC40F-8337-4827-8CC6-A09F11C0BE67}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Destination_ADONET]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{8891adda-f0e4-4f1f-a346-3b8bd553593d}"
      DTS:ObjectName="Destination_ADONET">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=co1-sql1d-1;Initial Catalog=adminsys;Integrated Security=True;Application Name=&quot;SSIS-Script Generate-{1FF8A742-F454-4103-8C9B-D76356854607}Source&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Destination_OLEDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{863e16ee-a1cd-494d-b3fe-3b2f2773ad4e}"
      DTS:ObjectName="Destination_OLEDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=co1-sql1d-1;Initial Catalog=adminsys;Provider=SQLNCLI11.1;Integrated Security=SSPI;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Template]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{B014E926-3617-477D-B816-0A7E26122CE6}"
      DTS:ObjectName="Excel Connection Template">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::TemplateExcelFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Template.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Template]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{B017A2FD-59F8-442D-95CB-AF7386AFB0ED}"
      DTS:ObjectName="Flat File Connection Template">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::TemplateFlatFileConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Template.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{9BC4E3FC-2274-4E9B-9229-BA509B211211}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 1"
              DTS:DTSID="{DB6672BC-BC5A-4714-856E-6F82F5BAAB9B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source]"
      DTS:CreationName="FILE"
      DTS:DTSID="{2315BAE7-C224-431D-A679-598D341E7F89}"
      DTS:ObjectName="Source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::SourceFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="U:\Merge list.xlsx" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="&quot;CONFIG_SERVER&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;CommonConfigurations&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{6382ABA4-5FC1-4E70-B9D5-739732F05311}"
      DTS:ObjectName="CommonConfigurations" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17A2FF57-B84A-4756-BC53-44F8575E79C8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AnyDocOutputPath">
      <DTS:VariableValue
        DTS:DataType="8">U:\InsuredIDUpdate_AnyDoc.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0B080E02-1D68-4EC9-BDE8-5D426018514E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AnyDocTemplatePath">
      <DTS:VariableValue
        DTS:DataType="8">U:\InsuredIDUpdate_AnyDoc_Template.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{67228260-2CB7-418D-8C9E-2D971CAB0B5A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AttachmentList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4BA4B1B4-23C8-4C16-8D51-CA911ED5C466}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DynamoOutputPath">
      <DTS:VariableValue
        DTS:DataType="8">U:\InsuredIDUpdate_ACMProd.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DCBFC95A-CFB2-40D0-89F8-F01172A17697}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DynamoTemplatePath">
      <DTS:VariableValue
        DTS:DataType="8">U:\InsuredIDUpdate_ACMProd_Template.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E2C41575-71C6-4EA6-A8AD-2DE3B767AA73}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Environment">
      <DTS:VariableValue
        DTS:DataType="8">DEV</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9EEC9FEB-D352-4E0A-9126-5B5A224D5803}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMailFrom">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5DCD2068-1AB3-4463-AE9F-BEAED5464C81}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMailTo">
      <DTS:VariableValue
        DTS:DataType="8">dev@imglobal.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DDC3AE6F-C400-48C5-AF17-C7820CA21806}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GeneratorFilePath">
      <DTS:VariableValue
        DTS:DataType="8">U:\insured_id_update.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{879D1A5C-96D7-43C7-A3C8-A0DF5181E92C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ImageNowOutputPath">
      <DTS:VariableValue
        DTS:DataType="8">U:\insured_id_update_ImageNow.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB644683-775A-404F-A8F3-D8D8DAEBE52C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ImageNowTemplatePath">
      <DTS:VariableValue
        DTS:DataType="8">U:\insured_id_update_ImageNow_template.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C816F8B-C7FA-485F-B2B6-F1EF34197168}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailCCTo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DEDEBE67-B1FF-4FEA-8E4C-1EF10E5FE769}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailFrom">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CECFCB50-BA88-448E-AD53-BB3271B18F4C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF1F429A-490A-4093-A40A-36FE4F3782EF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailSubject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BDB92024-9CFC-480B-B68F-057B0D246916}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MailTo">
      <DTS:VariableValue
        DTS:DataType="8">dev@imglobal.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C6CBE1B-421B-4AA9-9EA4-5E9EDDB390D8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MainConfigConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=IND-SSIS1DT;Initial Catalog=SSIS_DEV;Provider=SQLNCLI10.1;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EDBF84A5-3B6E-4292-9D69-610743639E46}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFilePath">
      <DTS:VariableValue
        DTS:DataType="8">U:\InsuredIDList.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5092338-B181-4B59-BC0F-8F6C122FFAD4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ScriptTemplateFilePath">
      <DTS:VariableValue
        DTS:DataType="8">U:\insured_id_update_template.sql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8AE98D99-5A6A-43EB-8CDC-145725291EDA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPServer">
      <DTS:VariableValue
        DTS:DataType="8">smtprelay.olympus.local</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD2EFB98-F7E8-4798-BC79-E7108BD3A9D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFilePath">
      <DTS:VariableValue
        DTS:DataType="8">U:\Merge list.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF7E711E-95B2-4FE8-8F94-62A971E93528}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLText">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0043EA29-B0C8-4ADC-A04E-43BC628C6304}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TemplateDatabaseConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=IND-SQL2D;Initial Catalog=adminsys;Provider=SQLNCLI11;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1DB703AD-5291-4332-A9CD-67E1B7AC85FB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TemplateExcelFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Template.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0141E00-A094-48E4-AAC4-FFA427A4E12D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TemplateFlatFileConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">C:\Template.txt</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,13,OnPostExecute,12,OnPreExecute</DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Split Function"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{fd3d8251-6f09-4655-b23b-a35b514b1f3f}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Split Function"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,13,OnPostExecute,12,OnPreExecute</DTS:Property>
        <DTS:Property
          DTS:EventName="OnInformation"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPreExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{863e16ee-a1cd-494d-b3fe-3b2f2773ad4e}"
          SQLTask:SqlStatementSource="IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fn_TempSplit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))&#xA;DROP FUNCTION dbo.fn_TempSplit&#xA;GO&#xA;&#xA;CREATE FUNCTION dbo.fn_TempSplit (@sep char(1), @s varchar(512))&#xA;RETURNS table&#xA;AS&#xA;RETURN (&#xA;    WITH Pieces(pn, start, stop) AS (&#xA;      SELECT 1, 1, CHARINDEX(@sep, @s)&#xA;      UNION ALL&#xA;      SELECT pn + 1, stop + 1, CHARINDEX(@sep, @s, stop + 1)&#xA;      FROM Pieces&#xA;      WHERE stop &gt; 0&#xA;    )&#xA;    SELECT pn,&#xA;      RTRIM(LTRIM(SUBSTRING(@s, start, CASE WHEN stop &gt; 0 THEN stop-start ELSE 512 END))) AS s&#xA;    FROM Pieces&#xA;  )&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Temp Table"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0361F7C0-2D15-42F9-947F-E8ABB9DDDE6E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Temp Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{863e16ee-a1cd-494d-b3fe-3b2f2773ad4e}"
          SQLTask:SqlStatementSource="IF EXISTS (SELECT 1 from dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.TempInsuredIDList') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)&#xA;DROP TABLE dbo.TempInsuredIDList&#xA;GO&#xA;&#xA;CREATE TABLE dbo.TempInsuredIDList&#xA;(&#xA;&#x9;ID INT IDENTITY(1, 1),&#xA;&#x9;ProjectNumber VARCHAR(50),&#xA;&#x9;InsuredName VARCHAR(100),&#xA;&#x9;MasterID VARCHAR(50),&#xA;&#x9;DuplicateID VARCHAR(500)&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Drop Split Function"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9e2ae2cd-9e99-4185-8f4e-e6a90b6dce5a}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop Split Function"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{863e16ee-a1cd-494d-b3fe-3b2f2773ad4e}"
          SQLTask:SqlStatementSource="IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fn_TempSplit]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))&#xA;DROP FUNCTION dbo.fn_TempSplit&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Drop Temp Table"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{c38b8fd8-ea44-49b9-9b88-f427707bc149}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop Temp Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{863e16ee-a1cd-494d-b3fe-3b2f2773ad4e}"
          SQLTask:SqlStatementSource="IF EXISTS (SELECT 1 from dbo.sysobjects WHERE id = OBJECT_ID(N'dbo.TempInsuredIDList') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)&#xA;DROP TABLE dbo.TempInsuredIDList&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate InsuredID List"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5d555e23-d668-4a90-a8d4-9450d95f1219}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate InsuredID List"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{8891adda-f0e4-4f1f-a346-3b8bd553593d}"
          SQLTask:SqlStatementSource="DECLARE&#xA;&#x9;@ID INT,&#xA;&#x9;@count INT,&#xA;&#x9;@masterID VARCHAR(50),&#xA;&#x9;@duplicateID VARCHAR(50),&#xA;&#x9;@duplicateIDs VARCHAR(500),&#xA;&#x9;@sql VARCHAR(MAX)&#xA;&#xA;SELECT @ID = 1, @count = MAX(ID) FROM dbo.TempInsuredIDList&#xA;SET @sql = ''&#xA;&#xA;WHILE (@ID &lt;= @count)&#xA;BEGIN&#xA;&#x9;DECLARE duplicateIDList CURSOR FOR&#xA;&#x9;SELECT&#xA;&#x9;&#x9;MasterID,&#xA;&#x9;&#x9;s&#xA;&#x9;FROM dbo.TempInsuredIDList til&#xA;&#x9;CROSS APPLY dbo.fn_TempSplit(',', til.DuplicateID) e&#xA;&#x9;WHERE&#xA;&#x9;&#x9;til.ID = @ID&#xA;&#x9;ORDER BY&#xA;&#x9;&#x9;e.pn&#xA;&#xA;&#x9;OPEN duplicateIDList&#xA;&#x9;FETCH NEXT FROM duplicateIDList INTO&#xA;&#x9;&#x9;@masterID,&#xA;&#x9;&#x9;@duplicateID&#xA;&#xA;&#x9;WHILE (@@FETCH_STATUS = 0)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;IF (@sql != '')&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;SET @sql = @sql + 'UNION' + CHAR(13) + CHAR(10)&#xA;&#x9;&#x9;END&#xA;&#x9;&#x9;SET @sql = @sql + 'SELECT' + CHAR(13) + CHAR(10)&#xA;&#x9;&#x9;SET @sql = @sql + '&#x9;' + @masterID + ',' + CHAR(13) + CHAR(10)&#xA;&#x9;&#x9;SET @sql = @sql + '&#x9;' + @duplicateID + ',' + CHAR(13) + CHAR(10)&#xA;&#x9;&#x9;SET @sql = @sql + '&#x9;NULL,' + CHAR(13) + CHAR(10)&#xA;&#x9;&#x9;SET @sql = @sql + '&#x9;NULL' + CHAR(13) + CHAR(10)&#xA;&#xA;&#x9;&#x9;FETCH NEXT FROM duplicateIDList INTO&#xA;&#x9;&#x9;&#x9;@masterID,&#xA;&#x9;&#x9;&#x9;@duplicateID&#xA;&#x9;END&#xA;&#xA;&#x9;CLOSE duplicateIDList&#xA;&#x9;DEALLOCATE duplicateIDList&#xA;&#xA;&#x9;SET @ID = @ID + 1&#xA;&#xA;END&#xA;&#xA;SELECT @MaxData = CAST(@sql AS VARCHAR(MAX))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@MaxData"
            SQLTask:DtsVariableName="User::SQLText"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate Validation Script"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2361fe69-866a-4b00-b6af-592ac95accb4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate Validation Script"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{8891adda-f0e4-4f1f-a346-3b8bd553593d}"
          SQLTask:SqlStatementSource="UPDATE TempInsuredIDList&#xA;SET&#xA;&#x9;DuplicateID = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(DuplicateID, '  ', 'OX'), 'OX', ''), ' ', ''), ',', ', '), '-', ', ')&#xA;&#xA;DECLARE&#xA;&#x9;@ID INT,&#xA;&#x9;@count INT,&#xA;&#x9;@masterID VARCHAR(50),&#xA;&#x9;@duplicateID VARCHAR(500),&#xA;&#x9;@sql VARCHAR(MAX)&#xA;&#xA;SELECT @ID = 1, @count = MAX(ID) FROM dbo.TempInsuredIDList&#xA;SET @sql = N''&#xA;&#xA;WHILE (@ID &lt;= @count)&#xA;BEGIN&#xA;&#x9;SELECT @masterID = MasterID, @duplicateID = DuplicateID&#xA;&#x9;FROM dbo.TempInsuredIDList&#xA;&#x9;WHERE&#xA;&#x9;&#x9;ID = @ID&#xA;&#xA;&#x9;SET @sql = @sql + 'SELECT * FROM dbo.insured_master WITH (NOLOCK)' + CHAR(13) + CHAR(10)&#xA;&#x9;SET @sql = @sql + 'WHERE' + CHAR(13) + CHAR(10)&#xA;&#x9;SET @sql = @sql + '&#x9;insrd_mst_id IN (' + @masterID + ', ' + @duplicateID + ')' + CHAR(13) + CHAR(10)&#xA;&#x9;SET @sql = @sql + CHAR(13) + CHAR(10)&#xA;&#xA;&#x9;SET @ID = @ID + 1&#xA;END&#xA;&#xA;SELECT @MaxData = @sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@MaxData"
            SQLTask:DtsVariableName="User::SQLText"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load InsuredID List"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C96F731A-9BF2-43B4-9017-0440D8BE205B}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load InsuredID List"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load InsuredID List\OLE DB Destination"
              componentClassID="DTSAdapter.OLEDBDestination.3"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[TempInsuredIDList]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load InsuredID List\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Destination_OLEDB]"
                  connectionManagerRefId="Package.ConnectionManagers[Destination_OLEDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Insured]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="Insured"
                      externalMetadataColumnId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[InsuredName]"
                      lineageId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Insured]" />
                    <inputColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Primary ID Number]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Primary ID Number"
                      externalMetadataColumnId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MasterID]"
                      lineageId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Primary ID Number]" />
                    <inputColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Potential duplicate ID numbers]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="500"
                      cachedName="Potential duplicate ID numbers"
                      externalMetadataColumnId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DuplicateID]"
                      lineageId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Potential duplicate ID numbers]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProjectNumber]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ProjectNumber" />
                    <externalMetadataColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[InsuredName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="InsuredName" />
                    <externalMetadataColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MasterID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="MasterID" />
                    <externalMetadataColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DuplicateID]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      name="DuplicateID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load InsuredID List\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load InsuredID List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load InsuredID List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load InsuredID List\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load InsuredID List\Source File"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Source File"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

using System.Collections.Generic;
using System.Linq;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using DocumentFormat.OpenXml;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private readonly List<ColumnMapping> _columnMappings = new List<ColumnMapping>();
    IDTSConnectionManager100 connMgr;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        #region Configure Column Mapping
        this.MapColumns();
        //if (this._columnMappings.Count != ComponentMetaData.OutputCollection[0].OutputColumnCollection.Count)
        //{
        //    string message = this._columnMappings.Count.ToString() + " column relationships have been set up, but the Script Source has "
        //        + ComponentMetaData.OutputCollection[0].OutputColumnCollection.Count.ToString() + " output columns defined.";
        //    //ReportError(message, true);
        //    throw new ArgumentException(message);
        //}
        #endregion

        string workbookFileName = null;
        SpreadsheetDocument document = null;

        connMgr = this.Connections.Connection;
        workbookFileName = (string)connMgr.AcquireConnection(null);

        #region Opening Excel file
        if (workbookFileName != null)
        {
            try
            {
                document = SpreadsheetDocument.Open(workbookFileName, false);
            }
            catch (Exception ex)
            {
            }
        }
        #endregion

        WorkbookPart workbook = document.WorkbookPart;
        WorksheetPart worksheetPart = null;
        SharedStringTablePart sharedStringTablePart = workbook.SharedStringTablePart;

        foreach (Sheet sheet in workbook.Workbook.Sheets)
        {
            worksheetPart = (WorksheetPart)document.WorkbookPart.GetPartById(sheet.Id);

            //Read spreadsheet data into SSIS output buffer
            SheetData sheetData = worksheetPart.Worksheet.Elements<SheetData>().First();
            IEnumerable<Row> rows = sheetData.Elements<Row>();
            if (rows.Count() < 1)
            {
                break;
            }

            //Find First Row
            UInt32 firstRow = 2;

            int columnIndex = 1;

            foreach (Cell cell in rows.First().Elements<Cell>())
            {
                foreach (ColumnMapping columnRelationship in this._columnMappings)
                {
                    if (this.GetCellValue(cell, sharedStringTablePart) == columnRelationship.ExcelColumnName)
                    {
                        columnRelationship.ExcelColumnOffset = columnIndex;
                        break;
                    }
                }

                columnIndex++;
            }

            foreach (Row row in rows)
            {
                if (row.RowIndex < firstRow)
                {
                    //Skipping non-table or header row.
                }
                else
                {
                    //Reading data row
                    bool rowAdded = false;
                    foreach (Cell cell in row.Elements<Cell>())
                    {
                        foreach (ColumnMapping columnRelationship in this._columnMappings)
                        {
                            if (this.CellReferenceToCoordinates(cell.CellReference)[0] == columnRelationship.ExcelColumnOffset)
                            {
                                string cellValue = this.GetCellValue(cell, sharedStringTablePart);
                                if ((cellValue == null) || ((cellValue == "") && columnRelationship.TreatBlanksAsNulls))
                                {
                                    // do nothing
                                }
                                else
                                {
                                    //DataType property is null for numeric and date types. 
                                    //It contains the value CellValues.SharedString for strings, and CellValues.Boolean for Boolean values. 
                                    EnumValue<CellValues> nativeCellDataType = cell.DataType;

                                    if (!rowAdded)
                                    {
                                        Output0Buffer.AddRow();
                                        Output0Buffer.SheetName = sheet.Name;

                                        rowAdded = true;
                                    }
                                    columnRelationship.SetSSISBuffer(this.GetCellValue(cell, sharedStringTablePart), nativeCellDataType);
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    #region Note!!! Columns Setup, edit this section for column mapping
    // Ensure you've set up output columns and supplied an Excel Connection Manager in the Script Editor UI
    /// <summary>
    /// Fill this method with calls to MapColumn to map Excel column names to SSIS output columns, and provide data types.
    /// </summary>
    private void MapColumns()
    {
        // sample:
        // this.MapColumn("Excel Column Header", "SSIS Column Name", typeof(string));
        this.MapColumn("Insured ", "Insured ", typeof(string), true);
        this.MapColumn("Primary ID Number", "Primary ID Number", typeof(string), true);
        this.MapColumn("Potential duplicate ID numbers", "Potential duplicate ID numbers", typeof(string), true);
    }
    #endregion

    #region Sets up map from Excel column to an SSIS column
    private void MapColumn(string excelColumnName, string ssisColumnName, System.Type dataType, bool treatBlanksAsNulls)
    {
        string methodName = "set_" + ssisColumnName.Replace(" ", "");
        //Creating dataType.ToString() mapping from excelColumnName to ssisColumnName via methodName
        ColumnMapping mapping = new ColumnMapping(excelColumnName, ssisColumnName, dataType, treatBlanksAsNulls);
        #region Code to create delegates I'd have liked to have inside the ColumnMapping class itself if I could pass Output0Buffer...
        mapping.SetNull = (ColumnMapping.NullSetter)Delegate.CreateDelegate(typeof(ColumnMapping.NullSetter), Output0Buffer, methodName + "_IsNull");
        if (dataType == typeof(string))
        {
            mapping.SetString = (ColumnMapping.StringSetter)Delegate.CreateDelegate(typeof(ColumnMapping.StringSetter), Output0Buffer, methodName);
        }
        else if (dataType == typeof(int))
        {
            mapping.SetInt = (ColumnMapping.Int32Setter)Delegate.CreateDelegate(typeof(ColumnMapping.Int32Setter), Output0Buffer, methodName);
        }
        else if (dataType == typeof(DateTime))
        {
            mapping.SetDateTime = (ColumnMapping.DateTimeSetter)Delegate.CreateDelegate(typeof(ColumnMapping.DateTimeSetter), Output0Buffer, methodName);
        }
        else if (dataType == typeof(bool))
        {
            mapping.SetBoolean = (ColumnMapping.BooleanSetter)Delegate.CreateDelegate(typeof(ColumnMapping.BooleanSetter), Output0Buffer, methodName);
        }
        //ADD_DATATYPES_HERE
        else
        {
            //ReportUnhandledDataTypeError(dataType);
        }
        this._columnMappings.Add(mapping);
        #endregion
    }
    #endregion

    #region Helper functions to change Excel ranges to numeric coordinates/offsets
    private int[] RangeReferenceToCoordinates(string rangeReference)
    {
        int[] coordinates = new int[4];

        string[] cellReferences = rangeReference.Split(':');
        int[] startCellReference = this.CellReferenceToCoordinates(cellReferences[0]);
        int[] endCellReference = this.CellReferenceToCoordinates(cellReferences[1]);

        coordinates[0] = startCellReference[0];
        coordinates[1] = startCellReference[1];
        coordinates[2] = endCellReference[0];
        coordinates[3] = endCellReference[1];

        return coordinates;
    }

    private int[] CellReferenceToCoordinates(string cellReference)
    {
        //bool fireAgain = true;
        int[] coordinates = new int[2];

        //ComponentMetaData.FireInformation(0, "", "CellRef: [" + cellReference + "]", "", 0, ref fireAgain);
        int index;
        cellReference = cellReference.Replace("$", "").Trim();
        #region Collect column letters -> column
        string column = "";
        for (index = 0; index < cellReference.Length; index++)
        {
            if ("ABCDEFGHIJKLMNOPQRSTUVWXYZ".Contains(cellReference[index]))
            {
                column += cellReference[index];
            }
            else
            {
                break;
            }
        }
        #endregion
        //ComponentMetaData.FireInformation(0, "", "column: [" + column + "]", "", 0, ref fireAgain);
        #region Convert column into number -> coordinates[0]
        for (int power = 0; power < index; power++)
        {
            coordinates[0] += ("ABCDEFGHIJKLMNOPQRSTUVWXYZ".IndexOf(column[column.Length - power - 1]) + 1) * (int)Math.Pow(26, power);
        }
        #endregion
        //ComponentMetaData.FireInformation(0, "", "col coords: [" + coordinates[0].ToString() + "]", "", 0, ref fireAgain);
        #region Convert row into number -> coordinates[1]
        coordinates[1] = Convert.ToInt32(cellReference.Substring(index));
        #endregion
        //ComponentMetaData.FireInformation(0, "", "row coords: [" + coordinates[1].ToString() + "]", "", 0, ref fireAgain);

        return coordinates;
    }
    #endregion

    #region Helper function to read Excel cell values
    private string GetCellValue(Cell cell, SharedStringTablePart sharedStringTablePart)
    {
        if (cell.ChildElements.Count == 0)
        {
            return null;
        }
        if ((cell.DataType != null) && (cell.DataType == CellValues.SharedString))
        {
            return sharedStringTablePart.SharedStringTable.ChildElements[Int32.Parse(cell.CellValue.InnerText)].InnerText;
        }
        else
        {
            return cell.CellValue.InnerText;
        }
    }
    #endregion

    #region CLASS: ColumnMapping
    private class ColumnMapping
    {
        #region Property Setting Delegates
        public delegate void NullSetter(bool isNull);
        public delegate void StringSetter(string value);
        public delegate void Int32Setter(Int32 value);
        public delegate void DateTimeSetter(DateTime value);
        public delegate void BooleanSetter(bool value);
        //ADD_DATATYPES_HERE
        #endregion

        #region Private Variables
        private readonly string _excelColumnName;
        private int _excelColumnOffset;
        private readonly string _ssisColumnName;
        private readonly System.Type _dataType;
        private readonly bool _treatBlanksAsNulls;
        #endregion

        public NullSetter SetNull;
        public StringSetter SetString;
        public Int32Setter SetInt;
        public DateTimeSetter SetDateTime;
        public BooleanSetter SetBoolean;
        //ADD_DATATYPES_HERE

        #region Constructor
        public ColumnMapping(string excelColumnName, string ssisColumnName, System.Type dataType, bool treatBlanksAsNulls)
        {
            this._excelColumnName = excelColumnName;
            this._excelColumnOffset = -1;
            this._ssisColumnName = ssisColumnName;
            this._dataType = dataType;
            this._treatBlanksAsNulls = treatBlanksAsNulls;
        }
        #endregion

        #region Public Properties
        public System.Type DataType
        {
            get { return this._dataType; }
        }

        public string ExcelColumnName
        {
            get { return this._excelColumnName; }
        }

        public string SSISColumnName
        {
            get { return this._ssisColumnName; }
        }

        public int ExcelColumnOffset
        {
            get { return this._excelColumnOffset; }
            set { this._excelColumnOffset = value; }
        }

        public bool ExcelColumnFound
        {
            get { return (this._excelColumnOffset >= 0); }
        }

        public bool TreatBlanksAsNulls
        {
            get { return this._treatBlanksAsNulls; }
        }
        #endregion

        #region SSIS Buffer Setter
        public void SetSSISBuffer(string value, EnumValue<CellValues> nativeCellDataType)
        {
            #region String
            if (this._dataType == typeof(string))
            {
                try
                {
                    this.SetString(value);
                }
                #region catch...
                catch (Exception ex)
                {
                    //ReportError("Error encountered setting SSIS column '" + this._ssisColumnName + "' with string value '" + value + "': " + ex.Message, true);
                }
                #endregion
                //VerboseLog("Set SSIS column '" + this._ssisColumnName + "' with string value '" + value + "'");
            }
            #endregion
            #region Int
            else if (this._dataType == typeof(int))
            {
                int intValue = 0;
                try
                {
                    intValue = Convert.ToInt32(value);
                }
                #region catch...
                catch (Exception ex)
                {
                    //ReportError("Error encountered converting Excel column '" + this._excelColumnName + "' value '" + value + "' to integer: " + ex.Message, true);
                }
                #endregion
                try
                {
                    this.SetInt(intValue);
                }
                #region catch...
                catch (Exception ex)
                {
                    //ReportError("Error encountered setting SSIS column '" + this._ssisColumnName + "' with int value '" + intValue.ToString() + "': " + ex.Message, true);
                }
                #endregion
                //VerboseLog("Set SSIS column '" + this._ssisColumnName + "' with int value '" + intValue.ToString() + "'");
            }
            #endregion
            #region DateTime
            else if (this._dataType == typeof(DateTime))
            {
                DateTime dateValue = new DateTime(1900, 1, 1);

                if (nativeCellDataType == null) //Cell DataType property is null for numeric and date type.
                {
                    try
                    {
                        dateValue = dateValue.AddDays(Convert.ToDouble(value) - 2);
                    }
                    catch (Exception ex)
                    {
                        //ReportError("Error encountered converting Excel column '" + this._excelColumnName + "' value '" + value + "' to DateTime: " + ex.Message, true);
                    }
                }
                else
                {
                    try
                    {
                        dateValue = DateTime.Parse(value); //Cell data is in string data type even it is intended to be a date string
                    }
                    catch (Exception ex)
                    {
                    }
                }

                try
                {
                    this.SetDateTime(dateValue);
                }
                #region catch...
                catch (Exception ex)
                {
                    //ReportError("Error encountered setting SSIS column '" + this._ssisColumnName + "' with DateTime value '" + dateValue.ToString() + "': " + ex.Message, true);
                }
                #endregion
                //VerboseLog("Set SSIS column '" + this._ssisColumnName + "' with DateTime value '" + dateValue.ToString("yyyy-MM-dd hh:mm:ss") + "'");
            }
            #endregion
            #region Boolean
            else if (this._dataType == typeof(bool))
            {
                bool boolValue = false;
                try
                {
                    if ((value.ToUpper().Trim() == "YES")
                        || (value.ToUpper().Trim() == "Y")
                        || (value.ToUpper().Trim() == "TRUE"))
                    {
                        boolValue = true;
                    }
                    else if ((value.ToUpper().Trim() == "NO")
                        || (value.ToUpper().Trim() == "N")
                        || (value.ToUpper().Trim() == "FALSE"))
                    {
                        boolValue = false;
                    }
                    else
                    {
                        //ReportError("Invalid boolean value in column '" + this._excelColumnName + "': '" + value + "'", true);
                    }
                }
                #region catch...
                catch (Exception ex)
                {
                    //ReportError("Error encountered converting Excel column '" + this._excelColumnName + "' value '" + value + "' to boolean: " + ex.Message, true);
                }
                #endregion
                try
                {
                    this.SetBoolean(boolValue);
                }
                #region catch...
                catch (Exception ex)
                {
                    //ReportError("Error encountered setting SSIS column '" + this._ssisColumnName + "' with boolean value '" + boolValue.ToString() + "': " + ex.Message, true);
                }
                #endregion
                //VerboseLog("Set SSIS column '" + this._ssisColumnName + "' with Boolean value '" + boolValue.ToString() + "'");
            }
            #endregion
            //ADD_DATATYPES_HERE
            else
            {
                //ReportUnhandledDataTypeError(this._dataType);
            }
        }
        #endregion
    }
    #endregion
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String SheetName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool SheetName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Insured
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Insured_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PrimaryIDNumber
    {
        set
        {
            this[2] = value;
        }
    }
    public bool PrimaryIDNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PotentialduplicateIDnumbers
    {
        set
        {
            this[3] = value;
        }
    }
    public bool PotentialduplicateIDnumbers_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_300e3f331521444383d792564b4ba02b.Properties.Settings.get_Default():SC_300e3f331521444383d792564b4ba02b.Properties.Sett" +
    "ings")]

namespace SC_300e3f331521444383d792564b4ba02b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_300e3f331521444383d792564b4ba02b.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{941245DB-FF34-468D-96FE-F3437569118F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_300e3f331521444383d792564b4ba02b</RootNamespace>
    <AssemblyName>SC_300e3f331521444383d792564b4ba02b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="DocumentFormat.OpenXml, Version=2.5.5631.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_300e3f331521444383d792564b4ba02b</msb:CodeName>
		<msb:DisplayName>SC_300e3f331521444383d792564b4ba02b</msb:DisplayName>
		<msb:ProjectId>{1A4BBB9C-4CB5-44D7-8968-1C27F39E89F2}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_300e3f331521444383d792564b4ba02b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_300e3f331521444383d792564b4ba02b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("International Medical Group, Inc.")]
[assembly: AssemblyProduct("SC_300e3f331521444383d792564b4ba02b")]
[assembly: AssemblyCopyright("Copyright @ International Medical Group, Inc. 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_300e3f331521444383d792564b4ba02b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_300e3f331521444383d792564b4ba02b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_300e3f331521444383d792564b4ba02b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_300e3f331521444383d792564b4ba02b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_300e3f331521444383d792564b4ba02b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_300e3f331521444383d792564b4ba02b.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHHjdFQAAAAAAAAAAOAAAiELAQsAADIAAAAIAAAAAAAAblEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABRRAABXAAAAAGAAALAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdDEAAAAgAAAAMgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALAEAAAAYAAAAAYAAAA0AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
UQAAAAAAAEgAAAACAAUAECwAAAQlAAABAAAAAAAAAFgrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnM4AAAGfQEAAAQCAnM6AAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvNgAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzLAAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
BioeAigRAAAKKh4CKBIAAAoqABswBAClAgAAAgAAEQIoCQAABhQKFAsCAnsBAAAEbzkAAAZ9BQAA
BAJ7BQAABBRvEwAACnQhAAABCgYsDQYWKBQAAAoL3gMm3gAHbxUAAAoMFA0IbxYAAAoTBAhvFwAA
Cm8YAAAKbxkAAAoTEjglAgAAERJvGgAACnQoAAABEwUHbxUAAAoRBW8bAAAKKBwAAApvHQAACnQs
AAABDQlvHgAACm8BAAArKAIAACsTBhEGbwMAACsTBxEHKAQAACsXP94BAAAYEwgXEwkRBygFAAAr
bwYAACtvIgAAChMTK2MRE28jAAAKEwoCewQAAARvJAAAChMUKywSFCglAAAKEwsCEQoRBCgNAAAG
EQtvEQAABigmAAAKLAsRCxEJbxQAAAYrCRIUKCcAAAoty94OEhT+FgUAABtvKAAACtwRCRdYEwkR
E28pAAAKLZTeDBETLAcRE28oAAAK3BEHbyoAAAoTFTgVAQAAERVvKwAAChMMEQxvLAAACigtAAAK
EQhE+QAAABYTDREMbwYAACtvIgAAChMWOMkAAAARFm8jAAAKEw4CewQAAARvJAAAChMXOJIAAAAS
FyglAAAKEw8CEQ5vLgAACigcAAAKKAwAAAYWlBEPbxMAAAYzbAIRDhEEKA0AAAYTEBEQLFwREHIT
AABwKCYAAAosCREPbxYAAAYtRREOby8AAAoTERENLSUCewMAAARvNQAABgJ7AwAABBEFbzAAAAoo
HAAACm8tAAAGFxMNEQ8CEQ4RBCgNAAAGERFvFwAABhIXKCcAAAo6Yv///94OEhf+FgUAABtvKAAA
CtwRFm8pAAAKOiv////eDBEWLAcRFm8oAAAK3BEVbykAAAo63/7//94MERUsBxEVbygAAArcERJv
KQAACjrP/f//3gwREiwHERJvKAAACtwqAAAAQawAAAAAAAAwAAAACgAAADoAAAADAAAANwAAAQIA
AADpAAAAOQAAACIBAAAOAAAAAAAAAAIAAADRAAAAcAAAAEEBAAAMAAAAAAAAAAIAAACjAQAApQAA
AEgCAAAOAAAAAAAAAAIAAACIAQAA3AAAAGQCAAAMAAAAAAAAAAIAAABWAQAAKAEAAH4CAAAMAAAA
AAAAAAIAAABgAAAAOAIAAJgCAAAMAAAAAAAAAAMwBQBSAAAAAAAAAAJyFQAAcHIVAABw0CEAAAEo
MQAAChcoCgAABgJyJwAAcHInAABw0CEAAAEoMQAAChcoCgAABgJySwAAcHJLAABw0CEAAAEoMQAA
ChcoCgAABioAABMwBQAzAQAAAwAAEXKJAABwBHKTAABwchMAAHBvMgAACigzAAAKCgMEBQ4Ecw8A
AAYLB9AFAAACKDEAAAoCewMAAAQGcpcAAHAoMwAACig0AAAKdAUAAAJ9CwAABAXQIQAAASgxAAAK
KDUAAAosJgfQBgAAAigxAAAKAnsDAAAEBig0AAAKdAYAAAJ9DAAABDidAAAABdA6AAABKDEAAAoo
NQAACiwjB9AHAAACKDEAAAoCewMAAAQGKDQAAAp0BwAAAn0NAAAEK2gF0BEAAAEoMQAACig1AAAK
LCMH0AgAAAIoMQAACgJ7AwAABAYoNAAACnQIAAACfQ4AAAQrMwXQOwAAASgxAAAKKDUAAAosIQfQ
CQAAAigxAAAKAnsDAAAEBig0AAAKdAkAAAJ9DwAABAJ7BAAABAdvNgAACioAEzAEAEwAAAAEAAAR
Go06AAABCgMXjTwAAAETBBEEFh86nREEbzcAAAoLAgcWmigMAAAGDAIHF5ooDAAABg0GFggWlJ4G
FwgXlJ4GGAkWlJ4GGQkXlJ4GKhMwBgC5AAAABQAAERiNOgAAAQoDcqcAAHByEwAAcG8yAAAKbzgA
AAoQAXITAABwDBYLKypyqwAAcAMHbzkAAAooBwAAKywgCAMHbzkAAAqMPAAAASg7AAAKDAcXWAsH
A288AAAKMs0WDStFBhaPOgAAASVxOgAAAXKrAABwCAhvPAAACglZF1lvOQAACm89AAAKF1gjAAAA
AAAAOkAJbCg+AAAKaVpYgToAAAEJF1gNCQcytwYXAwdvPwAACihAAAAKngYqAAAAAzACAFcAAAAA
AAAAA29BAAAKb0IAAAotAhQqA28vAAAKLDQDby8AAAooQwAAChkzJgRvRAAACm9BAAAKA29FAAAK
b0YAAAooRwAACm9IAAAKb0YAAAoqA29FAAAKb0YAAAoqSgJzSQAACn0EAAAEAigBAAAGKq4CKEoA
AAoCA30GAAAEAhV9BwAABAIEfQgAAAQCBX0JAAAEAg4EfQoAAAQqHgJ7CQAABCoeAnsGAAAEKh4C
ewgAAAQqHgJ7BwAABCoiAgN9BwAABCo2AnsHAAAEFv4EFv4BKh4CewoAAAQqAAAAGzAEAJUBAAAG
AAARAnsJAAAE0CEAAAEoMQAACig1AAAKLBcCewwAAAQDbx0AAAbdbAEAACbdZgEAAAJ7CQAABNA6
AAABKDEAAAooNQAACiwlFgoDKEAAAAoK3gMm3gACew0AAAQGbyEAAAbdMAEAACbdKgEAAAJ7CQAA
BNARAAABKDEAAAooNQAACixREgEgbAcAABcXKEsAAAoELR0SAQMoTAAACiMAAAAAAAAAQFkoTQAA
CgveDybeDAMoTgAACgveAybeAAJ7DgAABAdvJQAABt3IAAAAJt3CAAAAAnsJAAAE0DsAAAEoMQAA
Cig1AAAKOagAAAAWDANvTwAACm84AAAKcuEAAHAoJgAACi0uA29PAAAKbzgAAApy6QAAcCgmAAAK
LRcDb08AAApvOAAACnLtAABwKCYAAAosBBcMK0cDb08AAApvOAAACnL3AABwKCYAAAotLgNvTwAA
Cm84AAAKcv0AAHAoJgAACi0XA29PAAAKbzgAAApyAQEAcCgmAAAKLAIWDN4DJt4AAnsPAAAECG8p
AAAG3gMm3gAqAAAAAWQAAAAAFwARKAAGNwAAAQAARwAJUAADNwAAAQAAUwARZAAGNwAAAQAAkgAa
rAADNwAAAQAArwAJuAADNwAAAQAAuwARzAAGNwAAAQAA7gCSgAEDNwAAAQAAgwEOkQEDNwAAASoC
AwQFKFAAAAoqJgIWAyhRAAAKKloDLAgCFihSAAAKKnINAQBwc1MAAAp6JgIXAyhRAAAKKloDLAgC
FyhSAAAKKnINAQBwc1MAAAp6JgIYAyhRAAAKKloDLAgCGChSAAAKKnINAQBwc1MAAAp6JgIZAyhR
AAAKKloDLAgCGShSAAAKKnINAQBwc1MAAAp6HgIoVAAACioeAihVAAAKKh4CKFYAAAoqOgIoSgAA
CgIDfRAAAAQqggJ7EAAABG9XAAAKb1gAAApyqgEAcG9ZAAAKb1oAAAoqOgIoSgAACgIDfREAAAQq
HgIoSgAACioAABMwAgAtAAAABwAAEX4SAAAELSBywAEAcNANAAACKDEAAApvXAAACnNdAAAKCgaA
EgAABH4SAAAEKhp+EwAABCoeAoATAAAEKhp+FAAABCouc0AAAAaAFAAABCoeAihgAAAKKgC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMA0AACN+AACcDQAA
fBAAACNTdHJpbmdzAAAAABgeAAA0AgAAI1VTAEwgAAAQAAAAI0dVSUQAAABcIAAAqAQAACNCbG9i
AAAAAAAAAAIAAAFXFaIJCQsAAAD6JTMAFgAAAQAAAEoAAAAOAAAAFAAAAEEAAABEAAAAYAAAAA8A
AAAHAAAABQAAABIAAAAUAAAACAAAAAEAAAAIAAAAAQAAAAYAAAAHAAAAAAAKAAEAAAAAAAYAPgEd
AQoAXgFXAQoAZQFXAQYAdwEdAQ4AmQGEARIA+gEdAQYACQIdAQoAUgI3AhYAtAKMAgoA9wJXARoA
dwNUAxoAnQN8AxoAzgQ9AxoA2gRUAwoAWAVXAQoAZQVXAQoAiQVXAQoAPwcuBwoAcAdbBwoA+Aje
CAoAIwkRCQoAOgkRCQoAVwkRCQoAdgkRCQoAjwkRCQoAqAkRCQoAwwkRCQoA3gkRCQoA9wkRCQoA
MAoQCgoAUAoQCgYArwodAQoA6ApXARoA7wp8AxoACAt8AxoAQAtUAxoAVgtUAxoAaAs9AwoAdws3
AhoAnwtUAxoApQs9AxoAxAt8AxoA2Qt8AxoA8Qt8AxoA/wtUAwoAFww3AhoALgxUAx4AUAxEDBoA
YQxUAyMAawwAAAoAiwxXAQoAsgyfDBoAvgw9AxoA1wxUAwoA+wxXAQoABQ1XAQoAOA1XAQoAUA1X
AQoAVg1XAQoAYg1XAQoAmA1XAQoAqw1XARoAuw09AxoA6g1UAxoAEg5UAwoAaQ5XASIA0A6nDiIA
/w6nDiIAQg+nDgoAnw+MDwoAvA8RCQ4A6A/SDw4AARDSDwoAFhAQCgAAAAABAAAAAAABAAEAAQAQ
ADIAAAAFAAEAAQABABAAQAAAAAgABAAGAAMAEABLAAAACQAGAA8AAgEAAFkAAAANABAAGAACAQAA
ZAAAAA0AEAAcAAIBAABxAAAADQAQACAAAgEAAH0AAAANABAAJAACAQAAjAAAAA0AEAAoAAEAEACa
AAAAEQAQACwAAQAQAKgAAAAJABAAOAABABAAtAAAAAkAEQA6AAAAEAC+AMgACQASADsAAAEQAPcA
yAAVABQAPwAGAKgAEwAGALQAFwAGAJoAHwAhAFkCLwABAM0CNwAhAMADWwABANEDXgAhAOQDWwAh
APQDYQAhAP4DZQAGABIEaAAGABoEbAAGACQEcAAGACsEdAAGADcEeAABAAQH+QABAAQH+QARAE8H
DQERAHwHEQERAMAHLwFQIAAAAACGGLEBGwABAHAgAAAAAMYBtwEbAAEAciAAAAAAgQDFARsAAQCQ
IAAAAADGABcCIwABAOUgAAAAAMYBIwIbAAUA5yAAAAAAxgDVAhsABQDvIAAAAADGAOACGwAFAPgg
AAAAAMYAIwIbAAUAWCQAAAAAgQDsAhsABQC4JAAAAACBAPwCOwAFAPglAAAAAIEABgNEAAkAUCYA
AAAAgQAiA0QACgAYJwAAAACBALMDUwALAHsnAAAAAIYYsQEbAA0AjicAAAAAhhixATsADQC6JwAA
AACGCEIEfAARAMInAAAAAIYITwSBABEAyicAAAAAhghjBIEAEQDSJwAAAACGCHYEhQARANonAAAA
AIYIjASJABEA4ycAAAAAhgiiBI4AEgDxJwAAAACGCLcEjgASAPwnAAAAAIYA5QSSABIAAAAAAAMA
hhixAa4AFAAAAAAAAwDGAVEFtAAWAAAAAAADAMYBcwW5ABcAAAAAAAMAxgF/BcIAGgAAAAAAAwCG
GLEBrgAbAAAAAAADAMYBUQXIAB0AAAAAAAMAxgFzBc0AHgAAAAAAAwDGAX8FwgAhAAAAAAADAIYY
sQGuACIAAAAAAAMAxgFRBYkAJAAAAAAAAwDGAXMF1gAlAAAAAAADAMYBfwXCACgAAAAAAAMAhhix
Aa4AKQAAAAAAAwDGAVEF3wArAAAAAAADAMYBcwXlACwAAAAAAAMAxgF/BcIALwAAAAAAAwCGGLEB
rgAwAAAAAAADAMYBUQW0ADIAAAAAAAMAxgFzBbkAMwAAAAAAAwDGAX8FwgA2AAQqAAAAAIYYsQHv
ADcADyoAAAAAhgiSBcgAOgAZKgAAAACGCKAFtAA7ADAqAAAAAIYItQXIADwAOioAAAAAhgjBBbQA
PQBRKgAAAACGCNQFyAA+AFsqAAAAAIYI6AW0AD8AcioAAAAAhggDBsgAQAB8KgAAAACGCCMGtABB
AJMqAAAAAIYASgYbAEIAmyoAAAAAhgBRBhsAQgCjKgAAAACGAGAGjgBCAKsqAAAAAIYYsQH9AEIA
uioAAAAAhggUBwMBQwDbKgAAAACGGLEB/QBDAOoqAAAAAIMYsQEbAEQA9CoAAAAAkwiMBxUBRAAt
KwAAAACTCKAHGgFEADQrAAAAAJMIrAcfAUQAPCsAAAAAlgjQBzMBRQBPKwAAAACGGLEBGwBFAEMr
AAAAAJEYMRCkA0UAAAABAOQHAAACAOwHAAADAPYHAAAEAP4HAAABAAgIAAACABgIAAADACcIAAAE
ADAIAAABAEMIAAABAFIIAAABAGAIAAACAGUIAAABAAgIAAACABgIAAADACcIAAAEADAIAAABAHsI
AAABAHsIAAACAIEIAAABAJQIAAACAJsIAAABAKIIAAABAKIIAAACAKkIAAADAJQIAAABALIIAAAB
AJQIAAACAJsIAAABAHsIAAABAHsIAAACAKkIAAADAJQIAAABALIIAAABAJQIAAACAJsIAAABAHsI
AAABAHsIAAACAKkIAAADAJQIAAABALIIAAABAJQIAAACAJsIAAABAHsIAAABAHsIAAACAKkIAAAD
AJQIAAABALIIAAABAJQIAAACAJsIAAABAHsIAAABAHsIAAACAKkIAAADAJQIAAABALIIAAABALkI
AAACAMAIAAADAP4HAAABAHsIAAABAHsIAAABAHsIAAABAHsIAAABAHsIAAABAHsIAAABAHsIAAAB
AHsIAAABANQIAAABANQIAAABAHsIoQCxAcgAqQCxAcgAsQCxAcgAuQCxAcgAwQCxAcgAyQCxAcgA
0QCxAcgA2QCxAcgA4QCxAcgA6QCxAcgA8QCxAYkA+QCxARsACQCxARsACQCSCj0BCQCeCkQBAQGx
ARsACQDVAhsACQDgAhsASQDWClMBEQEDC1gBEQEVC2ABGQEmC2YBGQFJC2sBIQFdC3EBMQGFC3cB
DACTC4sBQQGxC5ABSQG4C5YBUQHlC50BYQEJDKQBMQElDKoBgQFbDLsBgQFlDM4BFACFC+cBHACT
C4sBJACFCwACLACTC4sBCQF2DBICLACCDI4AmQGXDBsAoQGCDI4ANACFC+cBPACTC4sBiQHKDCoC
qQG4CzACsQHgDJABsQFCBDcCQQHyDJABUQAXDZ4CCQEpDaYCCQExDawCyQFBDbICUQB2DLwCJABe
DcQCCQFnDdACCQFtDYEACQFyDeQCgQF8DekCCQExDfsCCQGFDYUACQGQDQED6QGdDQYDCQGhDQwD
8QGzDREDMQHODR4D+QHgDYUARAC4CysDYQD8DTYDsQEcDjwDMQEqDoEA0QE4DhED+QE+DkIDJACx
ARsAEQCxARsAiQCxAUkD8QFHDlADiQBQDlUDiQA4DlsDCQFYDoEAIQCxAe8AIQBgDmgDIQASBIkA
EQKxAcgAIQBKBhsAIQBRBhsAIQBgBo4ACQDpDm4DGQIiD3QDIQJbD3oDKQJ2DwMBMQKxARsAUQDF
D4EDkQCxAYcDQQKxAZQDUQKxARsAKQCxARsALgAbABkELgBjAIcELgALAKgDLgATAPADLgAjABkE
LgArAB8ELgAzAPADLgA7AEYELgBDABkELgBbAH4EYwCDAE4BowHbAk4BCQLzApsDKQLzApsDgQL7
Ak4BSgFAAsoC1wIWA2EDjwMEAAEACgAHAAsADwANABAADgASAAAA8wSdAAAA/ASiAAAADAWiAAAA
GwWmAAAALQWqAAAAPgWqAAAAbAaiAAAAdgaqAAAAhwaiAAAAjwaqAAAAngaiAAAArgaqAAAAxQai
AAAA4QaqAAAAIwcIAQAAPwclAQAAuAcqAQAA3Ac4AQIAEAADAAIAEQAFAAIAEgAHAAEAFAAJAAIA
EwAJAAIAFQALAAIAFgANAAEALQAPAAEALgARAAEALwATAAEAMAAVAAEAMQAXAAEAMgAZAAEAMwAb
AAEANAAdAAIAOQAfAAIAPAAhAAIAPQAjAAEAPgAjAAIAPwAlAIIB3wHxAfkBCgIYAiECJAMEgAAA
AQAAAEIVUGsAAAAAAABuCgAACwAAAAAAAAAAAAAAAQAAAQAAAAAEAAAAAAAAAAAAAAAKAE4BAAAA
AAQAAAAAAAAAAAAAAAoAVwEAAAAACwAAAAAAAAAAAAAAAQDZAQAAAAALAAAAAAAAAAAAAAABAGkC
AAAAAAIABQD/FQAAAAAAAEoAPQMAAAAABAAAAAAAAAAAAAAACgA4DAAAAAALAAAAAAAAAAAAAAAB
AIMOAAAAAAAAAAABAAAAOBAAAAQAAwAFAAQABgAEAAcABAAIAAQACQAEAD8AtQFBALUBPwDIAUMA
yAFBAMgBPwDaAXUA9wIAAAA8TW9kdWxlPgBTQ18zMDBlM2YzMzE1MjE0NDQzODNkNzkyNTY0YjRi
YTAyYi5kbGwAVXNlckNvbXBvbmVudABTY3JpcHRNYWluAENvbHVtbk1hcHBpbmcATnVsbFNldHRl
cgBTdHJpbmdTZXR0ZXIASW50MzJTZXR0ZXIARGF0ZVRpbWVTZXR0ZXIAQm9vbGVhblNldHRlcgBP
dXRwdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfMzAwZTNmMzMx
NTIxNDQ0MzgzZDc5MjU2NGI0YmEwMmIuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENv
bXBvbmVudABtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AE11bHRpY2FzdERlbGVnYXRlAFNjcmlwdEJ1
ZmZlcgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBG
aW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcABQcmltZU91dHB1dABDcmVhdGVO
ZXdPdXRwdXRSb3dzAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAExpc3RgMQBfY29sdW1uTWFw
cGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAGNvbm5NZ3IA
UHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBNYXBDb2x1bW5zAFR5cGUATWFwQ29sdW1uAFJhbmdlUmVm
ZXJlbmNlVG9Db29yZGluYXRlcwBDZWxsUmVmZXJlbmNlVG9Db29yZGluYXRlcwBEb2N1bWVudEZv
cm1hdC5PcGVuWG1sAERvY3VtZW50Rm9ybWF0Lk9wZW5YbWwuU3ByZWFkc2hlZXQAQ2VsbABEb2N1
bWVudEZvcm1hdC5PcGVuWG1sLlBhY2thZ2luZwBTaGFyZWRTdHJpbmdUYWJsZVBhcnQAR2V0Q2Vs
bFZhbHVlAF9leGNlbENvbHVtbk5hbWUAX2V4Y2VsQ29sdW1uT2Zmc2V0AF9zc2lzQ29sdW1uTmFt
ZQBfZGF0YVR5cGUAX3RyZWF0QmxhbmtzQXNOdWxscwBTZXROdWxsAFNldFN0cmluZwBTZXRJbnQA
U2V0RGF0ZVRpbWUAU2V0Qm9vbGVhbgBnZXRfRGF0YVR5cGUAZ2V0X0V4Y2VsQ29sdW1uTmFtZQBn
ZXRfU1NJU0NvbHVtbk5hbWUAZ2V0X0V4Y2VsQ29sdW1uT2Zmc2V0AHNldF9FeGNlbENvbHVtbk9m
ZnNldABnZXRfRXhjZWxDb2x1bW5Gb3VuZABnZXRfVHJlYXRCbGFua3NBc051bGxzAEVudW1WYWx1
ZWAxAENlbGxWYWx1ZXMAU2V0U1NJU0J1ZmZlcgBEYXRhVHlwZQBFeGNlbENvbHVtbk5hbWUAU1NJ
U0NvbHVtbk5hbWUARXhjZWxDb2x1bW5PZmZzZXQARXhjZWxDb2x1bW5Gb3VuZABUcmVhdEJsYW5r
c0FzTnVsbHMASW52b2tlAElBc3luY1Jlc3VsdABBc3luY0NhbGxiYWNrAEJlZ2luSW52b2tlAEVu
ZEludm9rZQBEYXRlVGltZQBzZXRfU2hlZXROYW1lAHNldF9TaGVldE5hbWVfSXNOdWxsAHNldF9J
bnN1cmVkAHNldF9JbnN1cmVkX0lzTnVsbABzZXRfUHJpbWFyeUlETnVtYmVyAHNldF9QcmltYXJ5
SUROdW1iZXJfSXNOdWxsAHNldF9Qb3RlbnRpYWxkdXBsaWNhdGVJRG51bWJlcnMAc2V0X1BvdGVu
dGlhbGR1cGxpY2F0ZUlEbnVtYmVyc19Jc051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AEVuZE9m
Um93c2V0AFNoZWV0TmFtZQBTaGVldE5hbWVfSXNOdWxsAEluc3VyZWQASW5zdXJlZF9Jc051bGwA
UHJpbWFyeUlETnVtYmVyAFByaW1hcnlJRE51bWJlcl9Jc051bGwAUG90ZW50aWFsZHVwbGljYXRl
SURudW1iZXJzAFBvdGVudGlhbGR1cGxpY2F0ZUlEbnVtYmVyc19Jc051bGwAUGFyZW50Q29tcG9u
ZW50AGdldF9Db25uZWN0aW9uAENvbm5lY3Rpb24AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1h
bmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3Vy
Y2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3Vs
dHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABPdXRwdXRzAE91dHB1dElE
cwBCdWZmZXJzAE91dHB1dE1hcABleGNlbENvbHVtbk5hbWUAc3Npc0NvbHVtbk5hbWUAZGF0YVR5
cGUAdHJlYXRCbGFua3NBc051bGxzAHJhbmdlUmVmZXJlbmNlAGNlbGxSZWZlcmVuY2UAY2VsbABz
aGFyZWRTdHJpbmdUYWJsZVBhcnQAdmFsdWUAbmF0aXZlQ2VsbERhdGFUeXBlAG9iamVjdABtZXRo
b2QAaXNOdWxsAGNhbGxiYWNrAHJlc3VsdABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBDb21w
b25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
U3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0
ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFNDXzMwMGUzZjMzMTUyMTQ0NDM4M2Q3OTI1NjRiNGJhMDJiAEdldE91dHB1dElEAEdl
dENvbHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQWNx
dWlyZUNvbm5lY3Rpb24AU3RyaW5nAFNwcmVhZHNoZWV0RG9jdW1lbnQAT3BlbgBXb3JrYm9va1Bh
cnQAZ2V0X1dvcmtib29rUGFydABnZXRfU2hhcmVkU3RyaW5nVGFibGVQYXJ0AFdvcmtib29rAGdl
dF9Xb3JrYm9vawBTaGVldHMAZ2V0X1NoZWV0cwBPcGVuWG1sRWxlbWVudABJRW51bWVyYXRvcmAx
AEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAU2hlZXQAU3RyaW5nVmFsdWUAZ2V0X0lkAG9wX0lt
cGxpY2l0AE9wZW5YbWxQYXJ0Q29udGFpbmVyAE9wZW5YbWxQYXJ0AEdldFBhcnRCeUlkAFdvcmtz
aGVldFBhcnQAV29ya3NoZWV0AGdldF9Xb3Jrc2hlZXQASUVudW1lcmFibGVgMQBFbGVtZW50cwBT
aGVldERhdGEAU3lzdGVtLkNvcmUAU3lzdGVtLkxpbnEARW51bWVyYWJsZQBGaXJzdABSb3cAQ291
bnQARW51bWVyYXRvcgBvcF9FcXVhbGl0eQBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAFN5
c3RlbS5Db2xsZWN0aW9ucwBJRW51bWVyYXRvcgBVSW50MzJWYWx1ZQBnZXRfUm93SW5kZXgAQ2Vs
bFR5cGUAZ2V0X0NlbGxSZWZlcmVuY2UAZ2V0X05hbWUARXhjZXB0aW9uAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAFJlcGxhY2UAQ29uY2F0AERlbGVnYXRlAENyZWF0ZURlbGVn
YXRlAEludDMyAEJvb2xlYW4AQWRkAENoYXIAU3BsaXQAVHJpbQBnZXRfQ2hhcnMAQ29udGFpbnMA
Z2V0X0xlbmd0aABJbmRleE9mAE1hdGgAUG93AFN1YnN0cmluZwBDb252ZXJ0AFRvSW50MzIAT3Bl
blhtbEVsZW1lbnRMaXN0AGdldF9DaGlsZEVsZW1lbnRzAGdldF9Db3VudABTaGFyZWRTdHJpbmdU
YWJsZQBnZXRfU2hhcmVkU3RyaW5nVGFibGUAQ2VsbFZhbHVlAGdldF9DZWxsVmFsdWUAZ2V0X0lu
bmVyVGV4dABQYXJzZQBnZXRfSXRlbQBUb0RvdWJsZQBBZGREYXlzAFRvVXBwZXIAc2V0X0l0ZW0A
SW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5l
V3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElEVFNDb21wb25l
bnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAElEVFNSdW50aW1l
Q29ubmVjdGlvbjEwMABHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBnZXRfQ29ubmVjdGlvbk1h
bmFnZXIAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAQXNz
ZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
LmNjdG9yAFNDXzMwMGUzZjMzMTUyMTQ0NDM4M2Q3OTI1NjRiNGJhMDJiLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwAAABFPAHUAdABwAHUAdAAgADAAAAEAEUkAbgBzAHUAcgBlAGQAIAAA
I1AAcgBpAG0AYQByAHkAIABJAEQAIABOAHUAbQBiAGUAcgAAPVAAbwB0AGUAbgB0AGkAYQBsACAA
ZAB1AHAAbABpAGMAYQB0AGUAIABJAEQAIABuAHUAbQBiAGUAcgBzAAAJcwBlAHQAXwAAAyAAAA9f
AEkAcwBOAHUAbABsAAADJAAANUEAQgBDAEQARQBGAEcASABJAEoASwBMAE0ATgBPAFAAUQBSAFMA
VABVAFYAVwBYAFkAWgAAB1kARQBTAAADWQAACVQAUgBVAEUAAAVOAE8AAANOAAALRgBBAEwAUwBF
AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABz
AGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAA
dABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAFUMAbwBuAG4AZQBj
AHQAaQBvAG4AAHFTAEMAXwAzADAAMABlADMAZgAzADMAMQA1ADIAMQA0ADQANAAzADgAMwBkADcA
OQAyADUANgA0AGIANABiAGEAMAAyAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAq3rg/d8K4E++9PdLrAD90wAIiYRdzYCAzJEIt3pcVhk04IkDBhIsAwYSMAMg
AAEDBhIoCyAEAQgdCB0SGRIdBwYVEiEBEhADBhIlCCAEAQ4OEikCBSABHQgOCDG/OFatNk41ByAC
DhItEjECBg4CBggDBhIpAgYCAwYSFAMGEhgDBhIcAwYSIAMGEiQEIAASKQMgAA4DIAAIBCABAQgD
IAACCiACAQ4VEjUBETkEKAASKQMoAA4DKAAIAygAAgUgAgEcGAQgAQECCCADEj0CEkEcBSABARI9
BCABAQ4IIAMSPQ4SQRwIIAMSPQgSQRwFIAEBEUUJIAMSPRFFEkEcCSADARIZHQgSHQMGEgUFIAEB
EgUEIAASJQQoABIlAwYSSQMGEk0EAAASSQQAABJNBQABARJNBAgAEkkECAASTQMGEjgEAAASOAQI
ABI4BgACCBIdDgUgAR0ICAMHAQgEAQAAAAQgARwcBwACEoCJDgIFIAASgI0EIAASMQUgABKAkQUg
ABKAlQogABUSgJ0BEoCZCBUSgJ0BEoCZBCAAEwAFIAASgKUGAAEOEoClBiABEoCtDgUgABKAtQow
AQAVEoC5AR4ABQoBEoC9DBABAR4AFRKAuQEeAAUKARKAxQsQAQEIFRKAuQEeAAQKARItBxUSgLkB
Ei0JIAAVEoCdARMABxUSgJ0BEi0GFRIhARIQCSAAFRGAyQETAAcVEYDJARIQBQACAg4OCBUSgLkB
EoDFCBUSgJ0BEoDFBSAAEoDVBgABCRKA1QggABUSNQEROV0HGA4SgIkSgI0SgLESMRKAoRKAvRUS
gLkBEoDFCQgSLRIQEoDFAhItEhAOFRI1ARE5FRKAnQESgJkVEoCdARItFRGAyQESEBUSgJ0BEoDF
FRKAnQESLRURgMkBEhAHAAESKRGA4QUgAg4ODgUAAg4ODgkAAxKA5RIpHA4HAAICEikSKQUgAQET
AAUHAg4SEAYgAR0OHQMMBwUdCB0OHQgdCB0DBCABAwgNEAECAhUSgLkBHgAeAAMKAQMFAAIOHBwE
IAEIAwUAAg0NDQQgAQ4IBAABCA4HBwQdCAgOCAUgABKA/QYVEjUBETkKAAETABUSNQETAAUgABKB
AQUgABKBBQYgARKAmQgGIAMBCAgIBAABDQ4FIAERRQ0FAAERRQ4GBwMIEUUCBSACAQgcBSAAEoEN
BSAAEoERBiABEoEVDgUgABKBHQcgAgEOEoEdBAcBEkkGIAEBEYElCAEAAgAAAAAAAwAAAUcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNCgBACNTQ18zMDBlM2YzMzE1MjE0NDQzODNkNzkyNTY0YjRiYTAyYgAABQEAAAAA
JgEAIUludGVybmF0aW9uYWwgTWVkaWNhbCBHcm91cCwgSW5jLgAANwEAMkNvcHlyaWdodCBAIElu
dGVybmF0aW9uYWwgTWVkaWNhbCBHcm91cCwgSW5jLiAyMDE0AAAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBAAA8UQAAAAAAAAAAAABeUQAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAUFEAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAABYBAAAAAAA
AAAAAABYBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
UGtCFQAAAQBQa0IVPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEuAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAlAMAAAEAMAAwADAAMAAwADQAYgAwAAAAZAAi
AAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABJAG4AdABlAHIAbgBhAHQAaQBvAG4AYQBsACAA
TQBlAGQAaQBjAGEAbAAgAEcAcgBvAHUAcAAsACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABl
AHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAzADAAMABlADMAZgAzADMAMQA1ADIAMQA0ADQA
NAAzADgAMwBkADcAOQAyADUANgA0AGIANABiAGEAMAAyAGIAAABAAA8AAQBGAGkAbABlAFYAZQBy
AHMAaQBvAG4AAAAAADEALgAwAC4ANQA0ADQAMgAuADIANwA0ADcAMgAAAAAAcAAoAAEASQBuAHQA
ZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAzADAAMABlADMAZgAzADMAMQA1ADIAMQA0ADQANAAz
ADgAMwBkADcAOQAyADUANgA0AGIANABiAGEAMAAyAGIALgBkAGwAbAAAAIwAMwABAEwAZQBnAGEA
bABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEkAbgB0AGUAcgBu
AGEAdABpAG8AbgBhAGwAIABNAGUAZABpAGMAYQBsACAARwByAG8AdQBwACwAIABJAG4AYwAuACAA
MgAwADEANAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
ADMAMAAwAGUAMwBmADMAMwAxADUAMgAxADQANAA0ADMAOAAzAGQANwA5ADIANQA2ADQAYgA0AGIA
YQAwADIAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAz
ADAAMABlADMAZgAzADMAMQA1ADIAMQA0ADQANAAzADgAMwBkADcAOQAyADUANgA0AGIANABiAGEA
MAAyAGIAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAA0
ADIALgAyADcANAA3ADIAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUANAA0ADIALgAyADcANAA3ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAcDEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_300e3f331521444383d792564b4ba02b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">29c55e646972805a8705013cd4fd5542</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load InsuredID List\Source File.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[Source]"
                  connectionManagerRefId="Package.ConnectionManagers[Source]"
                  name="Connection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load InsuredID List\Source File.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[SheetName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[SheetName]"
                      name="SheetName" />
                    <outputColumn
                      refId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Insured]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Insured]"
                      name="Insured" />
                    <outputColumn
                      refId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Primary ID Number]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Primary ID Number]"
                      name="Primary ID Number" />
                    <outputColumn
                      refId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Potential duplicate ID numbers]"
                      codePage="1252"
                      dataType="str"
                      length="500"
                      lineageId="Package\Load InsuredID List\Source File.Outputs[Output 0].Columns[Potential duplicate ID numbers]"
                      name="Potential duplicate ID numbers" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load InsuredID List.Paths[Output 0]"
              endId="Package\Load InsuredID List\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Load InsuredID List\Source File.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Output To Generator File"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{21c061c8-cbe3-4ae0-8df7-4cc9160c83a4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Output To Generator File"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_673a5c05c67e490b9e86502cb3adea39"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::AnyDocOutputPath,User::AnyDocTemplatePath,User::DynamoOutputPath,User::DynamoTemplatePath,User::GeneratorFilePath,User::ImageNowOutputPath,User::ImageNowTemplatePath,User::ScriptTemplateFilePath,User::SQLText">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Text;

namespace ST_6558181b1457439fae81cd06aaff2151.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            string sqlText;
            string scriptTemplateFilePath;
            string outputFilePath;
            string imageNowTemplatePath;
            string imageNowOutputPath;
            string dynamoTemplatePath;
            string dynamoOutputPath;
            string anyDocTemplatePath;
            string anyDocOutputPath;
            string scriptTemplate = string.Empty;
            string imageNowTemplate = string.Empty;
            string dynamoTemplate = string.Empty;
            string anyDocTemplate = string.Empty;
            StringBuilder generatedScriptBuilder;
            StringBuilder imageNowGeneratedScriptBuilder;
            StringBuilder dynamoGeneratedScriptBuilder;
            StringBuilder anyDocGeneratedScriptBuilder;

            sqlText = Dts.Variables["User::SQLText"].Value.ToString();
            scriptTemplateFilePath = Dts.Variables["User::ScriptTemplateFilePath"].Value.ToString();
            imageNowTemplatePath = Dts.Variables["User::ImageNowTemplatePath"].Value.ToString();
            dynamoTemplatePath = Dts.Variables["User::DynamoTemplatePath"].Value.ToString();
            anyDocTemplatePath = Dts.Variables["User::AnyDocTemplatePath"].Value.ToString();

            outputFilePath = Dts.Variables["User::GeneratorFilePath"].Value.ToString();
            imageNowOutputPath = Dts.Variables["User::ImageNowOutputPath"].Value.ToString();
            dynamoOutputPath = Dts.Variables["User::DynamoOutputPath"].Value.ToString();
            anyDocOutputPath = Dts.Variables["User::AnyDocOutputPath"].Value.ToString();

            if (File.Exists(scriptTemplateFilePath))
            {
                using (StreamReader sr = File.OpenText(scriptTemplateFilePath))
                {
                    scriptTemplate = sr.ReadToEnd();
                }
            }

            if (File.Exists(imageNowTemplatePath))
            {
                using (StreamReader srImageNow = File.OpenText(imageNowTemplatePath))
                {
                    imageNowTemplate = srImageNow.ReadToEnd();
                }
            }

            if (File.Exists(dynamoTemplatePath))
            {
                using (StreamReader srDynamo = File.OpenText(dynamoTemplatePath))
                {
                    dynamoTemplate = srDynamo.ReadToEnd();
                }
            }

            if (File.Exists(anyDocTemplatePath))
            {
                using (StreamReader srAnyDoc = File.OpenText(anyDocTemplatePath))
                {
                    anyDocTemplate = srAnyDoc.ReadToEnd();
                }
            }

            generatedScriptBuilder = new StringBuilder(scriptTemplate);
            generatedScriptBuilder.Replace("#GENERATED_INSUREDID_LIST#", sqlText);

            imageNowGeneratedScriptBuilder = new StringBuilder(imageNowTemplate);
            imageNowGeneratedScriptBuilder.Replace("#GENERATED_INSUREDID_LIST#", sqlText);

            dynamoGeneratedScriptBuilder = new StringBuilder(dynamoTemplate);
            dynamoGeneratedScriptBuilder.Replace("#GENERATED_INSUREDID_LIST#", sqlText);

            anyDocGeneratedScriptBuilder = new StringBuilder(anyDocTemplate);
            anyDocGeneratedScriptBuilder.Replace("#GENERATED_INSUREDID_LIST#", sqlText);

            using (StreamWriter sw  = new StreamWriter(outputFilePath))
            {
                sw.Write(generatedScriptBuilder.ToString());
                sw.Close();
            }

            using (StreamWriter swImageNow = new StreamWriter(imageNowOutputPath))
            {
                swImageNow.Write(imageNowGeneratedScriptBuilder.ToString());
                swImageNow.Close();
            }

            using (StreamWriter swDynamo = new StreamWriter(dynamoOutputPath))
            {
                swDynamo.Write(dynamoGeneratedScriptBuilder.ToString());
                swDynamo.Close();
            }

            using (StreamWriter swAnyDoc = new StreamWriter(anyDocOutputPath))
            {
                swAnyDoc.Write(anyDocGeneratedScriptBuilder.ToString());
                swAnyDoc.Close();
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="st_673a5c05c67e490b9e86502cb3adea39.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_6558181b1457439fae81cd06aaff2151.csproj</RootNamespace>
    <AssemblyName>st_673a5c05c67e490b9e86502cb3adea39</AssemblyName>
    <ProjectGuid>{36CBBC8A-3CB0-41F9-B9C9-840B0164D790}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_673a5c05c67e490b9e86502cb3adea39</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_673a5c05c67e490b9e86502cb3adea39</msb:DisplayName>
		<msb:ProjectId>{2DBC0754-466D-4AA1-9111-7E3359D197A7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_673a5c05c67e490b9e86502cb3adea39.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Settings.get_Default():ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Sett" +
    "ings")]

namespace ST_6558181b1457439fae81cd06aaff2151.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6558181b1457439fae81cd06aaff2151.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Internaional Medical Group, Inc.")]
[assembly: AssemblyProduct("ST_6558181b1457439fae81cd06aaff2151.csproj")]
[assembly: AssemblyCopyright("Copyright @ Internaional Medical Group, Inc. 2010")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6558181b1457439fae81cd06aaff2151.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="st_673a5c05c67e490b9e86502cb3adea39.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKkeWVQAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAzjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHw0AABPAAAAAEAAANAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANAEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
NAAAAAAAAEgAAAACAAUA6CQAAJQPAAABAAAAAAAAADAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwD5AgAAAgAAEX4WAAAKEwl+FgAAChMKfhYAAAoTC34WAAAKEwwC
KBcAAApvGAAACnKBAABwbxkAAApvGgAACm8bAAAKCgIoFwAACm8YAAAKcp0AAHBvGQAACm8aAAAK
bxsAAAoLAigXAAAKbxgAAApy1wAAcG8ZAAAKbxoAAApvGwAACg0CKBcAAApvGAAACnINAQBwbxkA
AApvGgAACm8bAAAKEwUCKBcAAApvGAAACnI/AQBwbxkAAApvGgAACm8bAAAKEwcCKBcAAApvGAAA
CnJxAQBwbxkAAApvGgAACm8bAAAKDAIoFwAACm8YAAAKcqEBAHBvGQAACm8aAAAKbxsAAAoTBAIo
FwAACm8YAAAKctMBAHBvGQAACm8aAAAKbxsAAAoTBgIoFwAACm8YAAAKcgECAHBvGQAACm8aAAAK
bxsAAAoTCAcoHAAACiwfBygdAAAKExEREW8eAAAKEwneDBERLAcREW8fAAAK3AkoHAAACiwfCSgd
AAAKExIREm8eAAAKEwreDBESLAcREm8fAAAK3BEFKBwAAAosIBEFKB0AAAoTExETbx4AAAoTC94M
ERMsBxETbx8AAArcEQcoHAAACiwgEQcoHQAAChMUERRvHgAAChMM3gwRFCwHERRvHwAACtwRCXMg
AAAKEw0RDXIvAgBwBm8hAAAKJhEKcyAAAAoTDhEOci8CAHAGbyEAAAomEQtzIAAAChMPEQ9yLwIA
cAZvIQAACiYRDHMgAAAKExAREHIvAgBwBm8hAAAKJghzIgAAChMVERURDW8bAAAKbyMAAAoRFW8k
AAAK3gwRFSwHERVvHwAACtwRBHMiAAAKExYRFhEObxsAAApvIwAAChEWbyQAAAreDBEWLAcRFm8f
AAAK3BEGcyIAAAoTFxEXEQ9vGwAACm8jAAAKERdvJAAACt4MERcsBxEXbx8AAArcEQhzIgAAChMY
ERgREG8bAAAKbyMAAAoRGG8kAAAK3gwRGCwHERhvHwAACtwCKBcAAAoWbyUAAAoqAAAAAWQAAAIA
UQELXAEMAAAAAAIAeAELgwEMAAAAAAIAoQELrAEMAAAAAAIAygEL1QEMAAAAAAIARQIXXAIMAAAA
AAIAcQIXiAIMAAAAAAIAnQIXtAIMAAAAAAIAyQIX4AIMAAAAAB4CKCYAAAoqtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAACwEAAAjfgAAmAQAAJAGAAAjU3Ry
aW5ncwAAAAAoCwAAaAIAACNVUwCQDQAAEAAAACNHVUlEAAAAoA0AAPQBAAAjQmxvYgAAAAAAAAAC
AAABVx2iAQkDAAAA+iUzABYAAAEAAAAlAAAABQAAAAYAAAAJAAAAAQAAACYAAAACAAAADwAAAAIA
AAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAzwDIAAoA6wDWAA4ASwEi
AQYAZwHIAAYAfQFsAQYArgGZAQYAZQJLAgYAkAJ+AgYApwJ+AgYAxAJ+AgYA4wJ+AgYA/AJ+AgYA
FQN+AgYAMAN+AgYASwN+AgYAZAN+AgYAnQN9AwYAvQN9AwYAEgT/AwYALwTIAAYANATIAAYAWAR+
AgoAhARuBAoAnQRuBAYAsgR9Aw4A1AQiAQYA9gTIAA4AAwUiARIAXAU8BRIAdAU8BQYAowWZBQYA
rwWZBQYAxQWZBQYA2gXIAAYA+gXuBQYAEAaZBQYAHQaZBQAAAAABAAAAAAABAAEAAAAQADIAPAAF
AAEAAQAAARAAcgA8AAkAAwAFAAEAEAB7AIYADQAEAAgAAwEAALEAAAARAAQACgARAI0BEwARALoB
FwARAAQCOQAGBi0CRwBWgDUCSgBWgD0CSgBQIAAAAACDGMoBGwABAFggAAAAAJMI0AEfAAEAkSAA
AAAAkwjkASQAAQCYIAAAAACTCPABKQABAKAgAAAAAJYIFAI9AAIAsyAAAAAAhhjKARsAAgCnIAAA
AACRGM0EiQACALwgAAAAAIYAKAIbAAIAKCQAAAAAhhjKARsAAgAAAAEARQI5AMoBWABBAMoBWABJ
AMoBWABRAMoBWABZAMoBWABhAMoBWABpAMoBWABxAMoBWAB5AMoBWACBAMoBWACJAMoBXQCRAMoB
GwCZAMoBGwAJAMoBGwChAEYEYgChAGEEaQApAMoBbgC5AMoBegDJAMoBGwARAMoBGwDRAMoBGwDZ
AP0EjQAZABUFkADhAGYFlQDpAH0FmgDxAIYFoAAJAJAFpAD5AKgFqAD5ALwFrQAJAdAFpAARAeYF
GwAZAcoBWAAZAQgGtAAhAcoBWAApASgGWAApAS4GGwDhADQGXQAZAMoBGwAIABQATgAIABgAUwAp
AJMAgAAuABsAaAEuACMAaAEuAGMA1AEuAAsA8AAuABMAOAEuADMAOAEuACsAbgEuADsAlAEuAEMA
aAEuAFsAywFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1ALwAAgABAAMAAwAAAH0BLwAAAPwBNAAA
ACACQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAC0VrGAAAAAAAADbAwAABAAAAAAA
AAAAAAAAAQC/AAAAAAAEAAAAAAAAAAAAAAABAMgAAAAAAAsAAAAAAAAAAAAAAAoAAwEAAAAACwAA
AAAAAAAAAAAACgAdBQAAAAAAAAAAAQAAAEMGAAAFAAQAAAAAAAA8TW9kdWxlPgBzdF82NzNhNWMw
NWM2N2U0OTBiOWU4NjUwMmNiM2FkZWEzOS5kbGwAUmVzb3VyY2VzAFNUXzY1NTgxODFiMTQ1NzQz
OWZhZTgxY2QwNmFhZmYyMTUxLmNzcHJvai5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4A
U1RfNjU1ODE4MWIxNDU3NDM5ZmFlODFjZDA2YWFmZjIxNTEuY3Nwcm9qAFNjcmlwdFJlc3VsdHMA
bXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51
bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNl
TWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBn
ZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJl
ZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJs
eVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHN0
XzY3M2E1YzA1YzY3ZTQ5MGI5ZTg2NTAyY2IzYWRlYTM5AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTdHJp
bmcARW1wdHkAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1Zh
cmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLklPAEZp
bGUARXhpc3RzAFN0cmVhbVJlYWRlcgBPcGVuVGV4dABUZXh0UmVhZGVyAFJlYWRUb0VuZABJRGlz
cG9zYWJsZQBEaXNwb3NlAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIAUmVwbGFjZQBTdHJlYW1X
cml0ZXIAVGV4dFdyaXRlcgBXcml0ZQBDbG9zZQBzZXRfVGFza1Jlc3VsdABTVF82NTU4MTgxYjE0
NTc0MzlmYWU4MWNkMDZhYWZmMjE1MS5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAAAAAAB/UwBUAF8ANgA1ADUAOAAxADgAMQBiADEANAA1ADcANAAzADkAZgBhAGUAOAAxAGMA
ZAAwADYAYQBhAGYAZgAyADEANQAxAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAABtVAHMAZQByADoAOgBTAFEATABUAGUAeAB0AAA5VQBzAGUA
cgA6ADoAUwBjAHIAaQBwAHQAVABlAG0AcABsAGEAdABlAEYAaQBsAGUAUABhAHQAaAAANVUAcwBl
AHIAOgA6AEkAbQBhAGcAZQBOAG8AdwBUAGUAbQBwAGwAYQB0AGUAUABhAHQAaAAAMVUAcwBlAHIA
OgA6AEQAeQBuAGEAbQBvAFQAZQBtAHAAbABhAHQAZQBQAGEAdABoAAAxVQBzAGUAcgA6ADoAQQBu
AHkARABvAGMAVABlAG0AcABsAGEAdABlAFAAYQB0AGgAAC9VAHMAZQByADoAOgBHAGUAbgBlAHIA
YQB0AG8AcgBGAGkAbABlAFAAYQB0AGgAADFVAHMAZQByADoAOgBJAG0AYQBnAGUATgBvAHcATwB1
AHQAcAB1AHQAUABhAHQAaAAALVUAcwBlAHIAOgA6AEQAeQBuAGEAbQBvAE8AdQB0AHAAdQB0AFAA
YQB0AGgAAC1VAHMAZQByADoAOgBBAG4AeQBEAG8AYwBPAHUAdABwAHUAdABQAGEAdABoAAA1IwBH
AEUATgBFAFIAQQBUAEUARABfAEkATgBTAFUAUgBFAEQASQBEAF8ATABJAFMAVAAjAAAAAADydvLE
aSZkT5X70y6cFobGAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEB
EhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAES
URFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABAgYOBCAAEnEEIAASdQUgARJ5
HAMgABwDIAAOBAABAg4GAAESgIEOByACEoCNDg4zBxkODg4ODg4ODg4ODg4OEoCNEoCNEoCNEoCN
EoCBEoCBEoCBEoCBEoCREoCREoCREoCRRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNUXzY1NTgxODFiMTQ1
NzQzOWZhZTgxY2QwNmFhZmYyMTUxLmNzcHJvagAABQEAAAAAJQEAIEludGVybmFpb25hbCBNZWRp
Y2FsIEdyb3VwLCBJbmMuAAA2AQAxQ29weXJpZ2h0IEAgSW50ZXJuYWlvbmFsIE1lZGljYWwgR3Jv
dXAsIEluYy4gMjAxMAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQCk
NAAAAAAAAAAAAAC+NAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsDQAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAHQEAAAAAAAAAAAAAHQENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCsYC0VAAABAKxgLRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsATUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACwAwAAAQAwADAAMAAw
ADAANABiADAAAABkACEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAEkAbgB0AGUAcgBuAGEA
aQBvAG4AYQBsACAATQBlAGQAaQBjAGEAbAAgAEcAcgBvAHUAcAAsACAASQBuAGMALgAAAAAAgAAr
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADYANQA1ADgAMQA4ADEA
YgAxADQANQA3ADQAMwA5AGYAYQBlADgAMQBjAGQAMAA2AGEAYQBmAGYAMgAxADUAMQAuAGMAcwBw
AHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA0ADIA
MQAuADIANAA3ADQAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwA2
ADcAMwBhADUAYwAwADUAYwA2ADcAZQA0ADkAMABiADkAZQA4ADYANQAwADIAYwBiADMAYQBkAGUA
YQAzADkALgBkAGwAbAAAAIgAMgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgAEkAbgB0AGUAcgBuAGEAaQBvAG4AYQBsACAATQBlAGQAaQBjAGEA
bAAgAEcAcgBvAHUAcAAsACAASQBuAGMALgAgADIAMAAxADAAAAB4ACgAAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0AF8ANgA3ADMAYQA1AGMAMAA1AGMANgA3AGUANAA5ADAA
YgA5AGUAOAA2ADUAMAAyAGMAYgAzAGEAZABlAGEAMwA5AC4AZABsAGwAAAB4ACsAAQBQAHIAbwBk
AHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADYANQA1ADgAMQA4ADEAYgAxADQANQA3ADQAMwA5AGYA
YQBlADgAMQBjAGQAMAA2AGEAYQBmAGYAMgAxADUAMQAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADEALgAyADQANwA0ADgA
AAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAy
ADEALgAyADQANwA0ADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Output To Validation File"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{9f985e45-de8b-4bd6-9772-4833d53ccb56}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Output To Validation File"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_437443f67fa648a69acf7c1d0f9917a9"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::SQLText,User::OutputFilePath">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;

namespace ST_6558181b1457439fae81cd06aaff2151.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            string sqlText;
            string outputFilePath;

            sqlText = Dts.Variables["User::SQLText"].Value.ToString();
            outputFilePath = Dts.Variables["User::OutputFilePath"].Value.ToString();

            using (StreamWriter sw  = new StreamWriter(outputFilePath))
            {
                //Add some text to the file.
                sw.Write(sqlText);
                sw.Close();
            }
            
            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_437443f67fa648a69acf7c1d0f9917a9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_437443f67fa648a69acf7c1d0f9917a9</msb:DisplayName>
		<msb:ProjectId>{6C795975-F4D0-4C74-9C50-437A09D0B70F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_437443f67fa648a69acf7c1d0f9917a9.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Settings.get_Default():ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Sett" +
    "ings")]

namespace ST_6558181b1457439fae81cd06aaff2151.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="st_437443f67fa648a69acf7c1d0f9917a9.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_6558181b1457439fae81cd06aaff2151.csproj</RootNamespace>
    <AssemblyName>st_437443f67fa648a69acf7c1d0f9917a9</AssemblyName>
    <ProjectGuid>{36CBBC8A-3CB0-41F9-B9C9-840B0164D790}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6558181b1457439fae81cd06aaff2151.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Internaional Medical Group, Inc.")]
[assembly: AssemblyProduct("ST_6558181b1457439fae81cd06aaff2151.csproj")]
[assembly: AssemblyCopyright("Copyright @ Internaional Medical Group, Inc. 2010")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6558181b1457439fae81cd06aaff2151.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6558181b1457439fae81cd06aaff2151.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="st_437443f67fa648a69acf7c1d0f9917a9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKgeWVQAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAXi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAwvAABPAAAAAEAAANAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
LwAAAAAAAEgAAAACAAUACCIAAAQNAAABAAAAAAAAAFAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAgBtAAAAAgAAEQIoFgAACm8XAAAKcoEAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApynQAAcG8YAAAKbxkAAApvGgAACgsHcxsAAAoMCAZvHAAACghvHQAACt4K
CCwGCG8eAAAK3AIoFgAAChZvHwAACioAAAABEAAAAgBHAA9WAAoAAAAAHgIoIAAACiq0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA6AMAACN+AABUBAAAKAYA
ACNTdHJpbmdzAAAAAHwKAADIAAAAI1VTAEQLAAAQAAAAI0dVSUQAAABUCwAAsAEAACNCbG9iAAAA
AAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAACAAAAAFAAAABgAAAAkAAAABAAAAIAAAAAIAAAAP
AAAAAgAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDPAMgACgDrANYA
DgBLASIBBgBnAcgABgB9AWwBBgCuAZkBBgBlAksCBgCQAn4CBgCnAn4CBgDEAn4CBgDjAn4CBgD8
An4CBgAVA34CBgAwA34CBgBLA34CBgBkA34CBgCdA30DBgC9A30DBgASBP8DBgAvBMgABgA0BMgA
BgBYBH4CCgCEBG4ECgCdBG4EBgCyBH0DDgDUBCIBDgD2BCIBEgBPBS8FEgBnBS8FBgCWBYwFBgCj
BYwFBgC6BcgAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEAByADwACQADAAUAAQAQAHsA
hgANAAQACAADAQAAsQAAABEABAAKABEAjQETABEAugEXABEABAI5AAYGLQJHAFaANQJKAFaAPQJK
AFAgAAAAAIMYygEbAAEAWCAAAAAAkwjQAR8AAQCRIAAAAACTCOQBJAABAJggAAAAAJMI8AEpAAEA
oCAAAAAAlggUAj0AAgCzIAAAAACGGMoBGwACAKcgAAAAAJEYzQSJAAIAvCAAAAAAhgAoAhsAAgBI
IQAAAACGGMoBGwACAAAAAQBFAjkAygFYAEEAygFYAEkAygFYAFEAygFYAFkAygFYAGEAygFYAGkA
ygFYAHEAygFYAHkAygFYAIEAygFYAIkAygFdAJEAygEbAJkAygEbAAkAygEbAKEARgRiAKEAYQRp
ACkAygFuALkAygF6AMkAygEbABEAygEbANEAygEbABkACAWNANkAWQWSAOEAcAWXAOkAeQWdAAkA
gwWhAPEAygFYAPkArgVYAPkAtAUbAAEBxgUbANkAzgVdABkAygEbAAgAFABOAAgAGABTACkAkwCA
AC4AGwAkAS4AIwAkAS4AYwCQAS4ACwCsAC4AEwD0AC4AMwD0AC4AKwAqAS4AOwBQAS4AQwAkAS4A
WwCHAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUApQACAAEAAwADAAAAfQEvAAAA/AE0AAAAIAJC
AAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAALRWsYAAAAAAAANsDAAAEAAAAAAAAAAAA
AAABAL8AAAAAAAQAAAAAAAAAAAAAAAEAyAAAAAAACwAAAAAAAAAAAAAACgADAQAAAAALAAAAAAAA
AAAAAAAKABAFAAAAAAAAAAABAAAA3QUAAAUABAAAAAA8TW9kdWxlPgBzdF80Mzc0NDNmNjdmYTY0
OGE2OWFjZjdjMWQwZjk5MTdhOS5kbGwAUmVzb3VyY2VzAFNUXzY1NTgxODFiMTQ1NzQzOWZhZTgx
Y2QwNmFhZmYyMTUxLmNzcHJvai5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfNjU1
ODE4MWIxNDU3NDM5ZmFlODFjZDA2YWFmZjIxNTEuY3Nwcm9qAFNjcmlwdFJlc3VsdHMAbXNjb3Js
aWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHN0XzQzNzQ0
M2Y2N2ZhNjQ4YTY5YWNmN2MxZDBmOTkxN2E5AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBTeXN0ZW0uSU8AU3RyZWFtV3JpdGVyAFRleHRXcml0
ZXIAV3JpdGUAQ2xvc2UASURpc3Bvc2FibGUARGlzcG9zZQBzZXRfVGFza1Jlc3VsdABTVF82NTU4
MTgxYjE0NTc0MzlmYWU4MWNkMDZhYWZmMjE1MS5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAAAAf1MAVABfADYANQA1ADgAMQA4ADEAYgAxADQANQA3ADQAMwA5AGYAYQBlADgA
MQBjAGQAMAA2AGEAYQBmAGYAMgAxADUAMQAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAbVQBzAGUAcgA6ADoAUwBRAEwAVABlAHgAdAAAKVUA
cwBlAHIAOgA6AE8AdQB0AHAAdQB0AEYAaQBsAGUAUABhAHQAaAAAABFpfU1v9/ZOl3SbL4KpnHwA
CLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkD
BhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEO
ElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAAHAMgAA4GBwMODhJ5
RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAu
TkVUIEZyYW1ld29yayA0LwEAKlNUXzY1NTgxODFiMTQ1NzQzOWZhZTgxY2QwNmFhZmYyMTUxLmNz
cHJvagAABQEAAAAAJQEAIEludGVybmFpb25hbCBNZWRpY2FsIEdyb3VwLCBJbmMuAAA2AQAxQ29w
eXJpZ2h0IEAgSW50ZXJuYWlvbmFsIE1lZGljYWwgR3JvdXAsIEluYy4gMjAxMAAACAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQA0LwAAAAAAAAAAAABOLwAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAQC8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAHQEAAAAAAAAAAAAAHQENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCsYC0VAAABAKxgLRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsATUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACwAwAAAQAwADAA
MAAwADAANABiADAAAABkACEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAEkAbgB0AGUAcgBu
AGEAaQBvAG4AYQBsACAATQBlAGQAaQBjAGEAbAAgAEcAcgBvAHUAcAAsACAASQBuAGMALgAAAAAA
gAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADYANQA1ADgAMQA4
ADEAYgAxADQANQA3ADQAMwA5AGYAYQBlADgAMQBjAGQAMAA2AGEAYQBmAGYAMgAxADUAMQAuAGMA
cwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA0
ADIAMQAuADIANAA3ADQAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQA
XwA0ADMANwA0ADQAMwBmADYANwBmAGEANgA0ADgAYQA2ADkAYQBjAGYANwBjADEAZAAwAGYAOQA5
ADEANwBhADkALgBkAGwAbAAAAIgAMgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgAEkAbgB0AGUAcgBuAGEAaQBvAG4AYQBsACAATQBlAGQAaQBj
AGEAbAAgAEcAcgBvAHUAcAAsACAASQBuAGMALgAgADIAMAAxADAAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0AF8ANAAzADcANAA0ADMAZgA2ADcAZgBhADYANAA4
AGEANgA5AGEAYwBmADcAYwAxAGQAMABmADkAOQAxADcAYQA5AC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADYANQA1ADgAMQA4ADEAYgAxADQANQA3ADQAMwA5
AGYAYQBlADgAMQBjAGQAMAA2AGEAYQBmAGYAMgAxADUAMQAuAGMAcwBwAHIAbwBqAAAAAABEAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADEALgAyADQANwA0
ADgAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUA
NAAyADEALgAyADQANwA0ADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sample To Add Email Attachment"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{8EC576D8-BA3F-4B8D-8548-546B36262687}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sample To Add Email Attachment"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f405927cbab9408f9c1246449fbce298"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::AttachmentList">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="st_f405927cbab9408f9c1246449fbce298.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_f405927cbab9408f9c1246449fbce298.csproj</RootNamespace>
    <AssemblyName>ST_f405927cbab9408f9c1246449fbce298.csproj</AssemblyName>
    <ProjectGuid>{BC87B699-F5E1-4ABF-B06C-D9DCB0DFA30B}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;

namespace ST_f405927cbab9408f9c1246449fbce298.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            List<string> attachmentList = new List<string>();
            attachmentList.Add(@"C:\Sample.ext");

            Dts.Variables["User::AttachmentList"].Value = attachmentList;

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_f405927cbab9408f9c1246449fbce298</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_f405927cbab9408f9c1246449fbce298</msb:DisplayName>
		<msb:ProjectId>{8BCBDEB0-C84F-49A8-897D-4333F6FC11D8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_f405927cbab9408f9c1246449fbce298.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_f405927cbab9408f9c1246449fbce298.csproj.Properties.Settings.get_Default():ST_f405927cbab9408f9c1246449fbce298.csproj.Properties.Sett" +
    "ings")]

namespace ST_f405927cbab9408f9c1246449fbce298.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f405927cbab9408f9c1246449fbce298.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("International Medical Group, Inc.")]
[assembly: AssemblyProduct("ST_f405927cbab9408f9c1246449fbce298.csproj")]
[assembly: AssemblyCopyright("Copyright @ International Medical Group, Inc. 2010")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_f405927cbab9408f9c1246449fbce298.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_f405927cbab9408f9c1246449fbce298.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_f405927cbab9408f9c1246449fbce298.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f405927cbab9408f9c1246449fbce298.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f405927cbab9408f9c1246449fbce298.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f405927cbab9408f9c1246449fbce298.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKQeWVQAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAzi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIAuAABLAAAAAEAAAPAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAPAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
LgAAAAAAAEgAAAACAAUAyCEAALgMAAABAAAAAAAAABAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgA5AAAAAgAAEXMWAAAKCgZygQAAcG8XAAAKAigYAAAKbxkAAApy
nQAAcG8aAAAKBm8bAAAKAigYAAAKFm8cAAAKKh4CKB0AAAoqAAAAAAAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADQAwAAI34AADwEAADoBQAAI1N0cmlu
Z3MAAAAAJAoAAMgAAAAjVVMA7AoAABAAAAAjR1VJRAAAAPwKAAC8AQAAI0Jsb2IAAAAAAAAAAgAA
AVcdogkJAwAAAPolMwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAdAAAAAgAAAA8AAAACAAAA
AgAAAAMAAAAEAAAAAQAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDWAM8ACgDyAN0ADgBS
ASkBBgBuAc8ABgCEAXMBBgC1AaABBgBsAlICBgCXAoUCBgCuAoUCBgDLAoUCBgDqAoUCBgADA4UC
BgAcA4UCBgA3A4UCBgBSA4UCBgBrA4UCBgCkA4QDBgDEA4QDBgD1A+IDBgASBM8ABgAXBM8ABgA7
BIUCCgBnBFEECgCABFEEBgCVBIQDDgC3BCkBBgD0BNkEDgD/BCkBEgBYBTgFEgBwBTgFAAAAAAEA
AAAAAAEAAQAAABAAOQBDAAUAAQABAAABEAB5AEMACQADAAUAAQAQAIIAjQANAAQACAADAQAAuAAA
ABEABAAKABEAlAETABEAwQEXABEACwI5AAYGNAJHAFaAPAJKAFaARAJKAFAgAAAAAIMY0QEbAAEA
WCAAAAAAkwjXAR8AAQCRIAAAAACTCOsBJAABAJggAAAAAJMI9wEpAAEAoCAAAAAAlggbAj0AAgCz
IAAAAACGGNEBGwACAKcgAAAAAJEYsASJAAIAvCAAAAAAhgAvAhsAAgABIQAAAACGGNEBGwACAAAA
AQBMAjkA0QFYAEEA0QFYAEkA0QFYAFEA0QFYAFkA0QFYAGEA0QFYAGkA0QFYAHEA0QFYAHkA0QFY
AIEA0QFYAIkA0QFdAJEA0QEbAJkA0QEbAAkA0QEbAKEAKQRiAKEARARpACkA0QFuALkA0QF6AMkA
0QEbABEA0QEbANEA0QEbAAwA0QEbAAwA+wSTABkAEQWZAOEAYgWeAOkAeQWjAPEAggWpAOEAjAVd
ABkA0QEbAAgAFABOAAgAGABTACkAkwCAAC4AGwAuAS4AIwAuAS4AYwCcAS4ACwC2AC4AEwD+AC4A
MwD+AC4AKwA0AS4AOwBbAS4AQwAuAS4AWwCTAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUArgAC
AAEAAwADAAAAhAEvAAAAAwI0AAAAJwJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAI0ABIAAAAEA
AAAtFapgAAAAAAAAjQAAAAQAAAAAAAAAAAAAAAEAxgAAAAAABAAAAAAAAAAAAAAAAQDPAAAAAAAL
AAAAAAAAAAAAAAAKAAoBAAAAAAsAAAAAAAAAAAAAAAoAGQUAAAAAAAAAAAEAAACbBQAABQAEAAAA
ADxNb2R1bGU+AFNUX2Y0MDU5MjdjYmFiOTQwOGY5YzEyNDY0NDlmYmNlMjk4LmNzcHJvai5kbGwA
UmVzb3VyY2VzAFNUX2Y0MDU5MjdjYmFiOTQwOGY5YzEyNDY0NDlmYmNlMjk4LmNzcHJvai5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZjQwNTkyN2NiYWI5NDA4ZjljMTI0NjQ0OWZi
Y2UyOTguY3Nwcm9qAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0u
Q29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVf
XwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2Vt
Ymx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0uQ29sbGVj
dGlvbnMuR2VuZXJpYwBMaXN0YDEAQWRkAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
VmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAHNldF9U
YXNrUmVzdWx0AFNUX2Y0MDU5MjdjYmFiOTQwOGY5YzEyNDY0NDlmYmNlMjk4LmNzcHJvai5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAH9TAFQAXwBmADQAMAA1ADkAMgA3AGMAYgBh
AGIAOQA0ADAAOABmADkAYwAxADIANAA2ADQANAA5AGYAYgBjAGUAMgA5ADgALgBjAHMAcAByAG8A
agAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAG0MAOgBcAFMAYQBt
AHAAbABlAC4AZQB4AHQAAClVAHMAZQByADoAOgBBAHQAdABhAGMAaABtAGUAbgB0AEwAaQBzAHQA
AACxsSHkXExSSbWr2td5sBgXAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAA
EhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCAB
AQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBRUSbQEOBSABARMA
BCAAEnEEIAASdQUgARJ5HAQgAQEcBwcBFRJtAQ5HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU1RfZjQwNTky
N2NiYWI5NDA4ZjljMTI0NjQ0OWZiY2UyOTguY3Nwcm9qAAAFAQAAAAAmAQAhSW50ZXJuYXRpb25h
bCBNZWRpY2FsIEdyb3VwLCBJbmMuAAA3AQAyQ29weXJpZ2h0IEAgSW50ZXJuYXRpb25hbCBNZWRp
Y2FsIEdyb3VwLCBJbmMuIDIwMTAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEAqC4AAAAAAAAAAAAAvi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAuAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAJgEAAAAAAAAAAAAAJgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCqYC0VAAABAKpgLRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAT4AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADUAwAAAQAwADAA
MAAwADAANABiADAAAABkACIAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAEkAbgB0AGUAcgBu
AGEAdABpAG8AbgBhAGwAIABNAGUAZABpAGMAYQBsACAARwByAG8AdQBwACwAIABJAG4AYwAuAAAA
gAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGYANAAwADUAOQAy
ADcAYwBiAGEAYgA5ADQAMAA4AGYAOQBjADEAMgA0ADYANAA0ADkAZgBiAGMAZQAyADkAOAAuAGMA
cwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA0
ADIAMQAuADIANAA3ADQANgAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwBmADQAMAA1ADkAMgA3AGMAYgBhAGIAOQA0ADAAOABmADkAYwAxADIANAA2ADQANAA5AGYAYgBj
AGUAMgA5ADgALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAACMADMAAQBMAGUAZwBhAGwAQwBvAHAA
eQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABJAG4AdABlAHIAbgBhAHQAaQBv
AG4AYQBsACAATQBlAGQAaQBjAGEAbAAgAEcAcgBvAHUAcAAsACAASQBuAGMALgAgADIAMAAxADAA
AAAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBmADQAMAA1
ADkAMgA3AGMAYgBhAGIAOQA0ADAAOABmADkAYwAxADIANAA2ADQANAA5AGYAYgBjAGUAMgA5ADgA
LgBjAHMAcAByAG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGYANAAwADUAOQAyADcAYwBiAGEAYgA5ADQAMAA4AGYAOQBjADEAMgA0ADYANAA0ADkA
ZgBiAGMAZQAyADkAOAAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADEALgAyADQANwA0ADYAAAAAAEgADwABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADEALgAyADQANwA0ADYAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADQPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Success Email"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{A0627536-5F9C-4382-946D-A2F9ECEAAE95}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Success Email"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Send Success Email.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{6E217859-666A-47EC-AB5F-EC2607E00830}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{0D546F06-9BAA-40C0-B355-E7651BE90FBB}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a333a9c5ffa341ee9f077576af50806c"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::SMTPServer,User::MailMessage,User::MailTo,User::MailCCTo,User::Environment,User::AttachmentList,System::StartTime,System::PackageName,User::MailSubject">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="st_a333a9c5ffa341ee9f077576af50806c.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_a333a9c5ffa341ee9f077576af50806c.csproj</RootNamespace>
    <AssemblyName>ST_a333a9c5ffa341ee9f077576af50806c.csproj</AssemblyName>
    <ProjectGuid>{09010996-A60B-482D-90DA-8F78F25BB52D}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.DirectoryServices" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.Net.Mail;
using System.Text;
using System.DirectoryServices;
using System.Collections;
using System.Collections.Generic;

namespace ST_a333a9c5ffa341ee9f077576af50806c.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/
        public const string MESSAGE = "<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.0 Transitional//EN'><HTML><BODY><BLOCKQUOTE style='MARGIN-TOP: 0px; PADDING-LEFT: 10px; MARGIN-LEFT: 0px; BORDER-LEFT: blue 2px solid; PADDING-TOP: 0px'><TABLE border='0' cellpadding='0' cellspacing='3'><TR><TD WIDTH=150><FONT face='Verdana' color='#0000FF' size='2'>Package Name:</FONT></TD><TD WIDTH=450><FONT face='Verdana' color='#0000FF' size='2'>%packageName%</FONT></TD></TR><TR><TD WIDTH=150><FONT face='Verdana' color='#0000FF' size='2'>Start Time:</FONT></TD><TD WIDTH=450><FONT face='Verdana' color='#0000FF' size='2'>%startTime%</FONT></TD></TR><TR><TD WIDTH=150><FONT face='Verdana' color='#0000FF' size='2'>Execution Time:</FONT></TD><TD WIDTH=450><FONT face='Verdana' color='#0000FF' size='2'>%executionTime%</FONT></TD></TR><TR></TR><TR></TR></TABLE>%messageBody%<BR></BLOCKQUOTE></BODY></HTML>";

        public void Main()
        {
            DirectorySearcher directory; 
            SearchResult result;

            MailMessage htmlMessage;
            SmtpClient mySmtpClient; 
            string messageBody; 
            StringBuilder msgBuilder;
            string userName;
            List<string> attachmentList = null;

            string mailFrom; 
            string mailTo;
            string mailCCTo;
            string mailSubject; 
            string smtpServer;

            string environ; 
            string packageName; 
            string startTime; 
            TimeSpan executionTimeSpan; 
            string executionTime;

            userName = Environment.UserName;

            try
            {
                directory = new DirectorySearcher("(&(objectClass=user)(SAMAccountName= " + userName + "))");
                result = directory.FindOne();
                mailFrom = result.Properties["mail"][0].ToString();

                if (mailFrom.Trim() == "") 
                {
                    mailFrom = "Unknown@imglobal.com";
                }
            }
            catch (Exception exc)
            {
                mailFrom = "Unknown@imglobal.com";
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            environ = Dts.Variables["User::Environment"].Value.ToString();
            packageName = Dts.Variables["System::PackageName"].Value.ToString();

            if (Dts.Variables["User::MailSubject"].Value is string && Dts.Variables["User::MailSubject"].Value.ToString() == string.Empty)
            {
                mailSubject = packageName + " - Successful - " + environ;
            }
            else
            {
                mailSubject = Dts.Variables["User::MailSubject"].Value.ToString() + " - " + environ;
            }

            if (Dts.Variables["User::AttachmentList"].Value != null && Dts.Variables["User::AttachmentList"].Value is List<string>)
                attachmentList = (List<string>)Dts.Variables["User::AttachmentList"].Value;


            smtpServer = Dts.Variables["User::SMTPServer"].Value.ToString();
            mailTo = Dts.Variables["User::MailTo"].Value.ToString();
            mailCCTo = Dts.Variables["User::MailCCTo"].Value.ToString();

            packageName = Dts.Variables["System::PackageName"].Value.ToString();
            startTime = Dts.Variables["System::StartTime"].Value.ToString();
            executionTimeSpan = DateTime.Now.Subtract(Convert.ToDateTime(startTime));
            executionTime = executionTimeSpan.Hours.ToString() + " Hours, " + executionTimeSpan.Minutes.ToString() + " Minutes, " + executionTimeSpan.Seconds.ToString() + " Seconds";

            messageBody = Dts.Variables["User::MailMessage"].Value.ToString();

            msgBuilder = new StringBuilder(MESSAGE);
            msgBuilder.Replace("%packageName%", packageName);
            msgBuilder.Replace("%startTime%", startTime);
            msgBuilder.Replace("%executionTime%", executionTime);
            msgBuilder.Replace("%messageBody%", messageBody);

            htmlMessage = new MailMessage(mailFrom, mailTo, mailSubject, msgBuilder.ToString());
            //htmlMessage.To.Add("IS-Data.Services@imglobal.com");
            //htmlMessage.To.Add("@imglobal.com");
            if (mailCCTo != string.Empty)
                htmlMessage.CC.Add(mailCCTo);
            if (attachmentList != null)
            {
                foreach (string attachment in attachmentList)
                {
                    htmlMessage.Attachments.Add(new Attachment(attachment));
                }
            }


            htmlMessage.IsBodyHtml = true;
            mySmtpClient = new SmtpClient(smtpServer);
            mySmtpClient.Credentials = CredentialCache.DefaultNetworkCredentials;
            mySmtpClient.Send(htmlMessage);

            htmlMessage.Dispose();

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_a333a9c5ffa341ee9f077576af50806c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_a333a9c5ffa341ee9f077576af50806c</msb:DisplayName>
		<msb:ProjectId>{60A92AD1-9E4A-4C4E-BC2E-DE5B5F96A6D1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_a333a9c5ffa341ee9f077576af50806c.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Settings.get_Default():ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Sett" +
    "ings")]

namespace ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a333a9c5ffa341ee9f077576af50806c.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("International Medical Group, Inc.")]
[assembly: AssemblyProduct("ST_a333a9c5ffa341ee9f077576af50806c.csproj")]
[assembly: AssemblyCopyright("Copyright @ International Medical Group, Inc. 2010")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a333a9c5ffa341ee9f077576af50806c.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKoeWVQAAAAAAAAAAOAAAiELAQsAACgAAAAIAAAAAAAAXkcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAxHAABPAAAAAGAAAPAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZCcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAPAEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
RwAAAAAAAEgAAAACAAUAeCUAAJQhAAABAAAAAAAAAMAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBADUAwAAAgAAERQTBygWAAAKEwZygQAAcBEGcs0AAHAoFwAACnMY
AAAKCgZvGQAACgsHbxoAAApy0wAAcG8bAAAKFm8cAAAKbx0AAAoTCBEIbx4AAApy3QAAcCgfAAAK
LAdy3wAAcBMI3hYmct8AAHATCAIoIAAAChdvIQAACt4AAiggAAAKbyIAAApyCQEAcG8jAAAKbyQA
AApvHQAAChMNAiggAAAKbyIAAApyLQEAcG8jAAAKbyQAAApvHQAAChMOAiggAAAKbyIAAApyVQEA
cG8jAAAKbyQAAAp1HAAAASw9AiggAAAKbyIAAApyVQEAcG8jAAAKbyQAAApvHQAACn4lAAAKKB8A
AAosEhEOcnkBAHARDSgXAAAKEwsrLQIoIAAACm8iAAAKclUBAHBvIwAACm8kAAAKbx0AAApymwEA
cBENKBcAAAoTCwIoIAAACm8iAAAKcqMBAHBvIwAACm8kAAAKLEICKCAAAApvIgAACnKjAQBwbyMA
AApvJAAACnUBAAAbLCECKCAAAApvIgAACnKjAQBwbyMAAApvJAAACnQBAAAbEwcCKCAAAApvIgAA
CnLNAQBwbyMAAApvJAAACm8dAAAKEwwCKCAAAApvIgAACnLvAQBwbyMAAApvJAAACm8dAAAKEwkC
KCAAAApvIgAACnIJAgBwbyMAAApvJAAACm8dAAAKEwoCKCAAAApvIgAACnItAQBwbyMAAApvJAAA
Cm8dAAAKEw4CKCAAAApvIgAACnInAgBwbyMAAApvJAAACm8dAAAKEw8oJgAAChMTEhMRDygnAAAK
KCgAAAoTEByNHAAAARMUERQWEhAoKQAAChMVEhUoKgAACqIRFBdySwIAcKIRFBgSECgrAAAKExYS
FigqAAAKohEUGXJdAgBwohEUGhIQKCwAAAoTFxIXKCoAAAqiERQbcnMCAHCiERQoLQAAChMRAigg
AAAKbyIAAApyhQIAcG8jAAAKbyQAAApvHQAAChMEcqkCAHBzLgAAChMFEQVyVAkAcBEOby8AAAom
EQVycAkAcBEPby8AAAomEQVyiAkAcBERby8AAAomEQVyqAkAcBEEby8AAAomEQgRCRELEQVvHQAA
CnMwAAAKDBEKfiUAAAooMQAACiwNCG8yAAAKEQpvMwAAChEHLD8RB280AAAKExgrGxIYKDUAAAoT
EghvNgAAChESczcAAApvOAAAChIYKDkAAAot3N4OEhj+FgIAABtvOgAACtwIF287AAAKEQxzPAAA
Cg0JKD0AAApvPgAACgkIbz8AAAoIb0AAAAoCKCAAAAoWbyEAAAoqARwAAAAACgBXYQAWNQAAAQIA
agMokgMOAAAAAB4CKEEAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAAFgFAAAjfgAAxAUAALgIAAAjU3RyaW5ncwAAAAB8DgAAxAkAACNVUwBAGAAAEAAA
ACNHVUlEAAAAUBgAAEQJAAAjQmxvYgAAAAAAAAACAAABVx2iCQkDAAAA+iUzABYAAAEAAAA1AAAA
BQAAAAcAAAAJAAAAAQAAAEEAAAADAAAADwAAAAIAAAACAAAAAwAAAAQAAAADAAAAAQAAAAUAAAAB
AAAAAQAAAAAACgABAAAAAAAGANYAzwAKAPIA3QAOAFIBKQEGAG4BzwAGAIQBcwEGALUBoAEGAHQC
WgIGAJ8CjQIGALYCjQIGANMCjQIGAPICjQIGAAsDjQIGACQDjQIGAD8DjQIGAFoDjQIGAHMDjQIG
AKwDjAMGAMwDjAMGAP0D6gMGABoEzwAGAB8EzwAGAEMEjQIKAG8EWQQKAIgEWQQGAJ0EjAMOAL8E
KQEGAOEEzwAGAPoEzwASACEFCAUSADMFCAUSAEgFCAUSAHAFCAUOALEFKQEWABkG+QUWADEG+QUG
AGUGSgYGAGwGzwAGAH0GzwAGAJAGzwAGAKwGzwAGANYGygYKAPwG7AYKABYH7AaTADcHAAAKAFwH
7AYKAIEH7AYGAKsHjAcGAMEHzwAKAOQH7AYKAPoH7wcKAAoI7wcKADoI7wcGAGIIzwAAAAAAAQAA
AAAAAQABAAAAEAA5AEMABQABAAEAAAEQAHkAQwAJAAMABQABABAAggCNAA0ABAAIAAMBAAC4AAAA
EQAFAAoAEQCUARMAEQDBARcAEQALAjkAVoAvAkcABgY8AvQGVoBEAvcGVoBMAvcGUCAAAAAAgxjR
ARsAAQBYIAAAAACTCNcBHwABAJEgAAAAAJMI6wEkAAEAmCAAAAAAkwj3ASkAAQCgIAAAAACWCBsC
PQACALMgAAAAAIYY0QEbAAIApyAAAAAAkRi4BDYHAgC8IAAAAACGADcCGwACALgkAAAAAIYY0QEb
AAIAAAABAFQCOQDRAQUHQQDRAQUHSQDRAQUHUQDRAQUHWQDRAQUHYQDRAQUHaQDRAQUHcQDRAQUH
eQDRAQUHgQDRAQUHiQDRAQoHkQDRARsAmQDRARsACQDRARsAoQAxBA8HoQBMBBYHKQDRARsHuQDR
AScHyQDRARsAEQDRARsA0QDRARsA2QDtBDoH4QABBT4H6QDRAQUH6QBABU4H8QBhBVMH+QCOBVgH
AQGOBV8HCQCXBWQH4QCgBWQH4QClBWgHGQDDBW4HCQHLBQoHCQEjBnQHEQGOBXoHGQE6BoEH4QBE
BkcAKQF1BowHMQGFBpIHKQGZBpkHOQGiBqIHQQGXBWQHOQGyBqIHOQG+BqIH4QABBaYHSQHRAQUH
SQHkBqwHUQHRAbQH4QAIB2gHUQEsB7wHWQEzBwUHDABCB8IHFABQB9MHUQFxB9gHcQHRAQUHHAAz
B+cHFAC4B+0HgQHNBxsAUQHVB/EHiQHRAQUHkQEcCPYHiQFNCPwHiQFdCAMIUQHNBxsAGQDRARsA
DgAQAEoACAAYAPsGCAAcAAAHKQCTAC0HLgAbALUILgAjALUILgBjACMJLgALAD0ILgATAIUILgAz
AIUILgArALsILgA7AOIILgBDALUILgBbABoJQwBrAAAHSQCTAC0HYQCbAAAHgwCrAAAHIgcKCAIA
AQADAAMAAACEAS8AAAADAjQAAAAnAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcAhQfMB94HBIAA
AAEAAAAtFa1gAAAAAAAAjQAAAAQAAAAAAAAAAAAAAAEAxgAAAAAABAAAAAAAAAAAAAAAAQDPAAAA
AAALAAAAAAAAAAAAAAAKAAoBAAAAAAQAAAAAAAAAAAAAAEUHCAUAAAAACwAAAAAAAAAAAAAACgDa
BQAAAAAAAAAAAQAAAGwIAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF9hMzMzYTljNWZmYTM0MWVlOWYw
Nzc1NzZhZjUwODA2Yy5jc3Byb2ouZGxsAFJlc291cmNlcwBTVF9hMzMzYTljNWZmYTM0MWVlOWYw
Nzc1NzZhZjUwODA2Yy5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2Ez
MzNhOWM1ZmZhMzQxZWU5ZjA3NzU3NmFmNTA4MDZjLmNzcHJvagBTY3JpcHRSZXN1bHRzAG1zY29y
bGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lz
dGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6
YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0Rl
ZmF1bHQARGVmYXVsdABNRVNTQUdFAE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVt
LlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3Nl
bWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5
c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBFbnZpcm9ubWVudABnZXRfVXNlck5hbWUAU3RyaW5nAENvbmNh
dABTeXN0ZW0uRGlyZWN0b3J5U2VydmljZXMARGlyZWN0b3J5U2VhcmNoZXIAU2VhcmNoUmVzdWx0
AEZpbmRPbmUAUmVzdWx0UHJvcGVydHlDb2xsZWN0aW9uAGdldF9Qcm9wZXJ0aWVzAFJlc3VsdFBy
b3BlcnR5VmFsdWVDb2xsZWN0aW9uAGdldF9JdGVtAFRvU3RyaW5nAFRyaW0Ab3BfRXF1YWxpdHkA
U2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfVmFsdWUARW1wdHkAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMATGlzdGAxAERhdGVUaW1lAGdldF9Ob3cAQ29udmVydABUb0RhdGVUaW1lAFRpbWVT
cGFuAFN1YnRyYWN0AGdldF9Ib3VycwBJbnQzMgBnZXRfTWludXRlcwBnZXRfU2Vjb25kcwBTeXN0
ZW0uVGV4dABTdHJpbmdCdWlsZGVyAFJlcGxhY2UAU3lzdGVtLk5ldC5NYWlsAE1haWxNZXNzYWdl
AG9wX0luZXF1YWxpdHkATWFpbEFkZHJlc3NDb2xsZWN0aW9uAGdldF9DQwBBZGQARW51bWVyYXRv
cgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AEF0dGFjaG1lbnRDb2xsZWN0aW9uAGdldF9BdHRh
Y2htZW50cwBBdHRhY2htZW50AFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABDb2xsZWN0
aW9uYDEATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBzZXRfSXNCb2R5SHRtbABTbXRwQ2xp
ZW50AFN5c3RlbS5OZXQAQ3JlZGVudGlhbENhY2hlAE5ldHdvcmtDcmVkZW50aWFsAGdldF9EZWZh
dWx0TmV0d29ya0NyZWRlbnRpYWxzAElDcmVkZW50aWFsc0J5SG9zdABzZXRfQ3JlZGVudGlhbHMA
U2VuZABFeGNlcHRpb24AU1RfYTMzM2E5YzVmZmEzNDFlZTlmMDc3NTc2YWY1MDgwNmMuY3Nwcm9q
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAB/UwBUAF8AYQAzADMAMwBhADkAYwA1
AGYAZgBhADMANAAxAGUAZQA5AGYAMAA3ADcANQA3ADYAYQBmADUAMAA4ADAANgBjAC4AYwBzAHAA
cgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAEsoACYAKABv
AGIAagBlAGMAdABDAGwAYQBzAHMAPQB1AHMAZQByACkAKABTAEEATQBBAGMAYwBvAHUAbgB0AE4A
YQBtAGUAPQAgAAAFKQApAAAJbQBhAGkAbAAAAQApVQBuAGsAbgBvAHcAbgBAAGkAbQBnAGwAbwBi
AGEAbAAuAGMAbwBtAAAjVQBzAGUAcgA6ADoARQBuAHYAaQByAG8AbgBtAGUAbgB0AAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAI1UAcwBlAHIAOgA6AE0AYQBpAGwAUwB1
AGIAagBlAGMAdAAAISAALQAgAFMAdQBjAGMAZQBzAHMAZgB1AGwAIAAtACAAAQcgAC0AIAABKVUA
cwBlAHIAOgA6AEEAdAB0AGEAYwBoAG0AZQBuAHQATABpAHMAdAAAIVUAcwBlAHIAOgA6AFMATQBU
AFAAUwBlAHIAdgBlAHIAABlVAHMAZQByADoAOgBNAGEAaQBsAFQAbwAAHVUAcwBlAHIAOgA6AE0A
YQBpAGwAQwBDAFQAbwAAI1MAeQBzAHQAZQBtADoAOgBTAHQAYQByAHQAVABpAG0AZQAAESAASABv
AHUAcgBzACwAIAAAFSAATQBpAG4AdQB0AGUAcwAsACAAABEgAFMAZQBjAG8AbgBkAHMAACNVAHMA
ZQByADoAOgBNAGEAaQBsAE0AZQBzAHMAYQBnAGUAAIapPAAhAEQATwBDAFQAWQBQAEUAIABIAFQA
TQBMACAAUABVAEIATABJAEMAIAAnAC0ALwAvAFcAMwBDAC8ALwBEAFQARAAgAEgAVABNAEwAIAA0
AC4AMAAgAFQAcgBhAG4AcwBpAHQAaQBvAG4AYQBsAC8ALwBFAE4AJwA+ADwASABUAE0ATAA+ADwA
QgBPAEQAWQA+ADwAQgBMAE8AQwBLAFEAVQBPAFQARQAgAHMAdAB5AGwAZQA9ACcATQBBAFIARwBJ
AE4ALQBUAE8AUAA6ACAAMABwAHgAOwAgAFAAQQBEAEQASQBOAEcALQBMAEUARgBUADoAIAAxADAA
cAB4ADsAIABNAEEAUgBHAEkATgAtAEwARQBGAFQAOgAgADAAcAB4ADsAIABCAE8AUgBEAEUAUgAt
AEwARQBGAFQAOgAgAGIAbAB1AGUAIAAyAHAAeAAgAHMAbwBsAGkAZAA7ACAAUABBAEQARABJAE4A
RwAtAFQATwBQADoAIAAwAHAAeAAnAD4APABUAEEAQgBMAEUAIABiAG8AcgBkAGUAcgA9ACcAMAAn
ACAAYwBlAGwAbABwAGEAZABkAGkAbgBnAD0AJwAwACcAIABjAGUAbABsAHMAcABhAGMAaQBuAGcA
PQAnADMAJwA+ADwAVABSAD4APABUAEQAIABXAEkARABUAEgAPQAxADUAMAA+ADwARgBPAE4AVAAg
AGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAgAGMAbwBsAG8AcgA9ACcAIwAwADAAMAAwAEYA
RgAnACAAcwBpAHoAZQA9ACcAMgAnAD4AUABhAGMAawBhAGcAZQAgAE4AYQBtAGUAOgA8AC8ARgBP
AE4AVAA+ADwALwBUAEQAPgA8AFQARAAgAFcASQBEAFQASAA9ADQANQAwAD4APABGAE8ATgBUACAA
ZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4AYQAnACAAYwBvAGwAbwByAD0AJwAjADAAMAAwADAARgBG
ACcAIABzAGkAegBlAD0AJwAyACcAPgAlAHAAYQBjAGsAYQBnAGUATgBhAG0AZQAlADwALwBGAE8A
TgBUAD4APAAvAFQARAA+ADwALwBUAFIAPgA8AFQAUgA+ADwAVABEACAAVwBJAEQAVABIAD0AMQA1
ADAAPgA8AEYATwBOAFQAIABmAGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIA
PQAnACMAMAAwADAAMABGAEYAJwAgAHMAaQB6AGUAPQAnADIAJwA+AFMAdABhAHIAdAAgAFQAaQBt
AGUAOgA8AC8ARgBPAE4AVAA+ADwALwBUAEQAPgA8AFQARAAgAFcASQBEAFQASAA9ADQANQAwAD4A
PABGAE8ATgBUACAAZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4AYQAnACAAYwBvAGwAbwByAD0AJwAj
ADAAMAAwADAARgBGACcAIABzAGkAegBlAD0AJwAyACcAPgAlAHMAdABhAHIAdABUAGkAbQBlACUA
PAAvAEYATwBOAFQAPgA8AC8AVABEAD4APAAvAFQAUgA+ADwAVABSAD4APABUAEQAIABXAEkARABU
AEgAPQAxADUAMAA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAgAGMA
bwBsAG8AcgA9ACcAIwAwADAAMAAwAEYARgAnACAAcwBpAHoAZQA9ACcAMgAnAD4ARQB4AGUAYwB1
AHQAaQBvAG4AIABUAGkAbQBlADoAPAAvAEYATwBOAFQAPgA8AC8AVABEAD4APABUAEQAIABXAEkA
RABUAEgAPQA0ADUAMAA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAg
AGMAbwBsAG8AcgA9ACcAIwAwADAAMAAwAEYARgAnACAAcwBpAHoAZQA9ACcAMgAnAD4AJQBlAHgA
ZQBjAHUAdABpAG8AbgBUAGkAbQBlACUAPAAvAEYATwBOAFQAPgA8AC8AVABEAD4APAAvAFQAUgA+
ADwAVABSAD4APAAvAFQAUgA+ADwAVABSAD4APAAvAFQAUgA+ADwALwBUAEEAQgBMAEUAPgAlAG0A
ZQBzAHMAYQBnAGUAQgBvAGQAeQAlADwAQgBSAD4APAAvAEIATABPAEMASwBRAFUATwBUAEUAPgA8
AC8AQgBPAEQAWQA+ADwALwBIAFQATQBMAD4AARslAHAAYQBjAGsAYQBnAGUATgBhAG0AZQAlAAAX
JQBzAHQAYQByAHQAVABpAG0AZQAlAAAfJQBlAHgAZQBjAHUAdABpAG8AbgBUAGkAbQBlACUAABsl
AG0AZQBzAHMAYQBnAGUAQgBvAGQAeQAlAAAMb0dTIg7GQLSr6O0jwGeVAAi3elxWGTTgiQiJhF3N
gIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwC
Bg6GqDwAIQBEAE8AQwBUAFkAUABFACAASABUAE0ATAAgAFAAVQBCAEwASQBDACAAJwAtAC8ALwBX
ADMAQwAvAC8ARABUAEQAIABIAFQATQBMACAANAAuADAAIABUAHIAYQBuAHMAaQB0AGkAbwBuAGEA
bAAvAC8ARQBOACcAPgA8AEgAVABNAEwAPgA8AEIATwBEAFkAPgA8AEIATABPAEMASwBRAFUATwBU
AEUAIABzAHQAeQBsAGUAPQAnAE0AQQBSAEcASQBOAC0AVABPAFAAOgAgADAAcAB4ADsAIABQAEEA
RABEAEkATgBHAC0ATABFAEYAVAA6ACAAMQAwAHAAeAA7ACAATQBBAFIARwBJAE4ALQBMAEUARgBU
ADoAIAAwAHAAeAA7ACAAQgBPAFIARABFAFIALQBMAEUARgBUADoAIABiAGwAdQBlACAAMgBwAHgA
IABzAG8AbABpAGQAOwAgAFAAQQBEAEQASQBOAEcALQBUAE8AUAA6ACAAMABwAHgAJwA+ADwAVABB
AEIATABFACAAYgBvAHIAZABlAHIAPQAnADAAJwAgAGMAZQBsAGwAcABhAGQAZABpAG4AZwA9ACcA
MAAnACAAYwBlAGwAbABzAHAAYQBjAGkAbgBnAD0AJwAzACcAPgA8AFQAUgA+ADwAVABEACAAVwBJ
AEQAVABIAD0AMQA1ADAAPgA8AEYATwBOAFQAIABmAGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcA
IABjAG8AbABvAHIAPQAnACMAMAAwADAAMABGAEYAJwAgAHMAaQB6AGUAPQAnADIAJwA+AFAAYQBj
AGsAYQBnAGUAIABOAGEAbQBlADoAPAAvAEYATwBOAFQAPgA8AC8AVABEAD4APABUAEQAIABXAEkA
RABUAEgAPQA0ADUAMAA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAg
AGMAbwBsAG8AcgA9ACcAIwAwADAAMAAwAEYARgAnACAAcwBpAHoAZQA9ACcAMgAnAD4AJQBwAGEA
YwBrAGEAZwBlAE4AYQBtAGUAJQA8AC8ARgBPAE4AVAA+ADwALwBUAEQAPgA8AC8AVABSAD4APABU
AFIAPgA8AFQARAAgAFcASQBEAFQASAA9ADEANQAwAD4APABGAE8ATgBUACAAZgBhAGMAZQA9ACcA
VgBlAHIAZABhAG4AYQAnACAAYwBvAGwAbwByAD0AJwAjADAAMAAwADAARgBGACcAIABzAGkAegBl
AD0AJwAyACcAPgBTAHQAYQByAHQAIABUAGkAbQBlADoAPAAvAEYATwBOAFQAPgA8AC8AVABEAD4A
PABUAEQAIABXAEkARABUAEgAPQA0ADUAMAA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQBy
AGQAYQBuAGEAJwAgAGMAbwBsAG8AcgA9ACcAIwAwADAAMAAwAEYARgAnACAAcwBpAHoAZQA9ACcA
MgAnAD4AJQBzAHQAYQByAHQAVABpAG0AZQAlADwALwBGAE8ATgBUAD4APAAvAFQARAA+ADwALwBU
AFIAPgA8AFQAUgA+ADwAVABEACAAVwBJAEQAVABIAD0AMQA1ADAAPgA8AEYATwBOAFQAIABmAGEA
YwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIAPQAnACMAMAAwADAAMABGAEYAJwAg
AHMAaQB6AGUAPQAnADIAJwA+AEUAeABlAGMAdQB0AGkAbwBuACAAVABpAG0AZQA6ADwALwBGAE8A
TgBUAD4APAAvAFQARAA+ADwAVABEACAAVwBJAEQAVABIAD0ANAA1ADAAPgA8AEYATwBOAFQAIABm
AGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIAPQAnACMAMAAwADAAMABGAEYA
JwAgAHMAaQB6AGUAPQAnADIAJwA+ACUAZQB4AGUAYwB1AHQAaQBvAG4AVABpAG0AZQAlADwALwBG
AE8ATgBUAD4APAAvAFQARAA+ADwALwBUAFIAPgA8AFQAUgA+ADwALwBUAFIAPgA8AFQAUgA+ADwA
LwBUAFIAPgA8AC8AVABBAEIATABFAD4AJQBtAGUAcwBzAGEAZwBlAEIAbwBkAHkAJQA8AEIAUgA+
ADwALwBCAEwATwBDAEsAUQBVAE8AVABFAD4APAAvAEIATwBEAFkAPgA8AC8ASABUAE0ATAA+AAIG
CAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgB
AAIAAAAAAAMAAAEDAAAOBgADDg4ODgiwP19/EdUKOgQgABJ5BCAAEn0GIAESgIEOBCABHAgDIAAO
BQACAg4OBSAAEoCFBSAAEoCJBiABEoCNHAMgABwGFRKAkQEOBQAAEYCVBgABEYCVDgggARGAnRGA
lQMgAAgFAAEOHQ4HIAISgKUODgcgBAEODg4OBSAAEoCtCSAAFRGAsQETAAYVEYCxAQ4EIAATAAUg
ABKAtQgVEoC9ARKAuQUgAQETAAMgAAIEIAEBAgUAABKAzQYgAQESgNEGIAEBEoCpMgcZEnUSeRKA
qRKAxQ4SgKUOFRKAkQEODg4ODg4ODg4RgJ0ODhGAlR0OCAgIFRGAsQEORwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
LwEAKlNUX2EzMzNhOWM1ZmZhMzQxZWU5ZjA3NzU3NmFmNTA4MDZjLmNzcHJvagAABQEAAAAAJgEA
IUludGVybmF0aW9uYWwgTWVkaWNhbCBHcm91cCwgSW5jLgAANwEAMkNvcHlyaWdodCBAIEludGVy
bmF0aW9uYWwgTWVkaWNhbCBHcm91cCwgSW5jLiAyMDEwAAAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBAAA0RwAAAAAAAAAAAABORwAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAQEcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAJgE
AAAAAAAAAAAAAJgENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQCtYC0VAAABAK1gLRU/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAT4
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADUAwAAAQAwADAAMAAwADAANABiADAA
AABkACIAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAEkAbgB0AGUAcgBuAGEAdABpAG8AbgBh
AGwAIABNAGUAZABpAGMAYQBsACAARwByAG8AdQBwACwAIABJAG4AYwAuAAAAgAArAAEARgBpAGwA
ZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGEAMwAzADMAYQA5AGMANQBmAGYAYQAz
ADQAMQBlAGUAOQBmADAANwA3ADUANwA2AGEAZgA1ADAAOAAwADYAYwAuAGMAcwBwAHIAbwBqAAAA
AABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA0ADIAMQAuADIANAA3
ADQAOQAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBhADMAMwAzAGEA
OQBjADUAZgBmAGEAMwA0ADEAZQBlADkAZgAwADcANwA1ADcANgBhAGYANQAwADgAMAA2AGMALgBj
AHMAcAByAG8AagAuAGQAbABsAAAAAACMADMAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABJAG4AdABlAHIAbgBhAHQAaQBvAG4AYQBsACAATQBl
AGQAaQBjAGEAbAAgAEcAcgBvAHUAcAAsACAASQBuAGMALgAgADIAMAAxADAAAAAAAIgALwABAE8A
cgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBhADMAMwAzAGEAOQBjADUAZgBm
AGEAMwA0ADEAZQBlADkAZgAwADcANwA1ADcANgBhAGYANQAwADgAMAA2AGMALgBjAHMAcAByAG8A
agAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGEAMwAz
ADMAYQA5AGMANQBmAGYAYQAzADQAMQBlAGUAOQBmADAANwA3ADUANwA2AGEAZgA1ADAAOAAwADYA
YwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADUANAAyADEALgAyADQANwA0ADkAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADEALgAyADQANwA0ADkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABgNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9395E1BF-1DCB-471E-BC81-93ADA68F190A}"
      DTS:From="Package\Create Temp Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load InsuredID List" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{27385B98-7D11-422E-8CA2-20861B86739C}"
      DTS:From="Package\Create Split Function"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Create Temp Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{115F4F5E-39AD-4BCD-8D74-860FD8EF6CFA}"
      DTS:From="Package\Drop Temp Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Drop Split Function" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{AC23B46D-BA48-435B-95E0-426CFBFA8E10}"
      DTS:From="Package\Load InsuredID List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Generate Validation Script" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{123A28F4-A474-4A91-A0DB-BBA2A55D4DE5}"
      DTS:From="Package\Generate Validation Script"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Output To Validation File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{ED46E8F5-DB73-434F-84FD-E6A9DF23F5FA}"
      DTS:From="Package\Output To Validation File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Generate InsuredID List" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{436AD7E2-9A2F-4A9C-B004-D16006B461A3}"
      DTS:From="Package\Generate InsuredID List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Output To Generator File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{5593A246-C2C0-4758-A093-18479D8358BC}"
      DTS:From="Package\Output To Generator File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Drop Temp Table" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{FE9CD07A-1502-4642-B0BE-9B0E5C1576E1}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{28E24168-5C7B-4E5B-953E-F1B7E02A0EAF}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Send Failure Email"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{4e5f2dde-38fa-4b68-8620-15e457b790b0}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Failure Email">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_eece5d30db97492e94011e774ce50ad2"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="System::PackageName,System::SourceName,System::StartTime,System::EventHandlerStartTime,System::ErrorDescription,User::SMTPServer,User::ErrorMailFrom,User::ErrorMailTo,User::Environment">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="st_eece5d30db97492e94011e774ce50ad2.csproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_a333a9c5ffa341ee9f077576af50806c.csproj</RootNamespace>
    <AssemblyName>st_eece5d30db97492e94011e774ce50ad2</AssemblyName>
    <ProjectGuid>{09010996-A60B-482D-90DA-8F78F25BB52D}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.DirectoryServices" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.Net.Mail;
using System.Text;
using System.DirectoryServices;
using System.Collections;

namespace ST_a333a9c5ffa341ee9f077576af50806c.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/
        public const string MESSAGE = "<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.0 Transitional//EN'><HTML><BODY><BLOCKQUOTE style='MARGIN-TOP: 0px; PADDING-LEFT: 10px; MARGIN-LEFT: 0px; PADDING-TOP: 0px'><BR><B><FONT face='Verdana' color='#444444' size='2'>%errorSubject%</FONT></B><BR><BR><TABLE border='0' cellpadding='0' cellspacing='3'><TR><TD WIDTH=120><B><FONT face='Verdana' color='#444444' size='2'>Package Name:</FONT></B></TD><TD><FONT face='Verdana' color='#444444' size='2'>%packageName%</FONT></TD></TR><TR><TD><B><FONT face='Verdana' color='#444444' size='2'>Task Name:</FONT></B></TD><TD><FONT face='Verdana' color='#444444' size='2'>%taskName%</FONT></TD></TR><TR><TD><B><FONT face='Verdana' color='#444444' size='2'>Start Time:</FONT></B></TD><TD><FONT face='Verdana' color='#444444' size='2'>%startTime%</FONT></TD></TR><TR><TD><B><FONT face='Verdana' color='#444444' size='2'>Failure Time:</FONT></B></TD><TD><FONT face='Verdana' color='#444444' size='2'>%failureTime%</FONT></TD></TR><TR><TD><B><FONT face='Verdana' color='#444444' size='2'>Error Message:</FONT></B></TD><TD><FONT face='Verdana' color='#444444' size='2'></FONT></TD></TR></TABLE><FONT face='Verdana' color='#444444' size='2'>%errorMessage%</FONT><BR></BLOCKQUOTE></BODY></HTML>";

        public void Main()
        {
            DirectorySearcher directory; 
            SearchResult result;

            MailMessage htmlMessage;
            SmtpClient mySmtpClient; 
            StringBuilder msgBuilder;
            string userName;

            string packageName; 
            string taskName;
            string startTime;
            string failureTime;
            string errorMailFrom;
            string errorMailTo; 
            string errorSubject;
            string errorMessage;
            string errorSMTPServer;

            string environ; 

            userName = Environment.UserName;

            try
            {
                directory = new DirectorySearcher("(&(objectClass=user)(SAMAccountName= " + userName + "))");
                result = directory.FindOne();
                errorMailFrom = result.Properties["mail"][0].ToString();

                if (errorMailFrom.Trim() == "") 
                {
                    errorMailFrom = "Unknown@imglobal.com";
                }
            }
            catch (Exception exc)
            {
                errorMailFrom = "Unknown@imglobal.com";
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            errorMailTo = Dts.Variables["User::ErrorMailTo"].Value.ToString();
            errorSMTPServer = Dts.Variables["User::SMTPServer"].Value.ToString();
            environ = Dts.Variables["User::Environment"].Value.ToString();
            errorSubject = "Package " + Dts.Variables["System::PackageName"].Value.ToString() + " Failed! - " + environ;

            packageName = Dts.Variables["System::PackageName"].Value.ToString();
            taskName = Dts.Variables["System::SourceName"].Value.ToString();
            startTime = Dts.Variables["System::StartTime"].Value.ToString();
            failureTime = Dts.Variables["System::EventHandlerStartTime"].Value.ToString();
            errorMessage = Dts.Variables["System::ErrorDescription"].Value.ToString();

            msgBuilder = new StringBuilder(MESSAGE);
            msgBuilder.Replace("%errorSubject%", errorSubject);
            msgBuilder.Replace("%packageName%", packageName);
            msgBuilder.Replace("%taskName%", taskName);
            msgBuilder.Replace("%startTime%", startTime);
            msgBuilder.Replace("%failureTime%", failureTime);
            msgBuilder.Replace("%errorMessage%", errorMessage);

            htmlMessage = new MailMessage(errorMailFrom, errorMailTo, errorSubject, msgBuilder.ToString());
            //htmlMessage.To.Add("IS-Data.Services@imglobal.com")
            htmlMessage.IsBodyHtml = true;
            mySmtpClient = new SmtpClient(errorSMTPServer);
            mySmtpClient.Credentials = CredentialCache.DefaultNetworkCredentials;
            mySmtpClient.Send(htmlMessage);

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_eece5d30db97492e94011e774ce50ad2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_eece5d30db97492e94011e774ce50ad2</msb:DisplayName>
		<msb:ProjectId>{7C1E3041-0B18-442A-BF6E-400058E23EF4}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_eece5d30db97492e94011e774ce50ad2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Settings.get_Default():ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Sett" +
    "ings")]

namespace ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a333a9c5ffa341ee9f077576af50806c.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("International Medical Group, Inc.")]
[assembly: AssemblyProduct("ST_a333a9c5ffa341ee9f077576af50806c.csproj")]
[assembly: AssemblyCopyright("Copyright @ International Medical Group, Inc. 2010")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a333a9c5ffa341ee9f077576af50806c.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_eece5d30db97492e94011e774ce50ad2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKseWVQAAAAAAAAAAOAAAiELAQsAACoAAAAIAAAAAAAATkkA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAABJAABLAAAAAGAAANAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVCkAAAAgAAAAKgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANAEAAAAYAAAAAYAAAAsAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
SQAAAAAAAEgAAAACAAUA8CMAABAlAAABAAAAAAAAADgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBABVAgAAAgAAESgWAAAKEwVygQAAcBEFcs0AAHAoFwAACnMYAAAK
CgZvGQAACgsHbxoAAApy0wAAcG8bAAAKFm8cAAAKbx0AAAoTChEKbx4AAApy3QAAcCgfAAAKLAdy
3wAAcBMK3hYmct8AAHATCgIoIAAAChdvIQAACt4AAiggAAAKbyIAAApyCQEAcG8jAAAKbyQAAApv
HQAAChMLAiggAAAKbyIAAApyLQEAcG8jAAAKbyQAAApvHQAAChMOAiggAAAKbyIAAApyTwEAcG8j
AAAKbyQAAApvHQAAChMPcnMBAHACKCAAAApvIgAACnKFAQBwbyMAAApvJAAACm8dAAAKcq0BAHAR
DyglAAAKEwwCKCAAAApvIgAACnKFAQBwbyMAAApvJAAACm8dAAAKEwYCKCAAAApvIgAACnLFAQBw
byMAAApvJAAACm8dAAAKEwcCKCAAAApvIgAACnLrAQBwbyMAAApvJAAACm8dAAAKEwgCKCAAAApv
IgAACnIPAgBwbyMAAApvJAAACm8dAAAKEwkCKCAAAApvIgAACnJLAgBwbyMAAApvJAAACm8dAAAK
Ew1yfQIAcHMmAAAKEwQRBHIUDABwEQxvJwAACiYRBHIyDABwEQZvJwAACiYRBHJODABwEQdvJwAA
CiYRBHJkDABwEQhvJwAACiYRBHJ8DABwEQlvJwAACiYRBHKYDABwEQ1vJwAACiYRChELEQwRBG8d
AAAKcygAAAoMCBdvKQAAChEOcyoAAAoNCSgrAAAKbywAAAoJCG8tAAAKAiggAAAKFm8hAAAKKgAA
AAEQAAAAAAcAV14AFioAAAEeAiguAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAACYBAAAI34AAAQFAACABwAAI1N0cmluZ3MAAAAAhAwAALgMAAAjVVMA
PBkAABAAAAAjR1VJRAAAAEwZAADECwAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAAB
AAAAKgAAAAUAAAAHAAAACQAAAAEAAAAuAAAAAwAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAUA
AAABAAAAAQAAAAAACgABAAAAAAAGAM8AyAAKAOsA1gAOAEsBIgEGAGcByAAGAH0BbAEGAK4BmQEG
AG0CUwIGAJgChgIGAK8ChgIGAMwChgIGAOsChgIGAAQDhgIGAB0DhgIGADgDhgIGAFMDhgIGAGwD
hgIGAKUDhQMGAMUDhQMGABoEBwQGADcEyAAGADwEyAAGAGAEhgIKAIwEdgQKAKUEdgQGALoEhQMO
ANwEIgEGAP4EyAAGABcFyAASAD4FJQUSAFAFJQUSAGUFJQUSAI0FJQUOAM4FIgEWADYGFgYWAE4G
FgYGAG0GYQYKAJMGgwYKAK4GgwYKAMQGuQYKANQGuQYKAAQHuQYGACwHyAAAAAAAAQAAAAAAAQAB
AAAAEAAyADwABQABAAEAAAEQAHIAPAAJAAMABQABABAAewCGAA0ABAAIAAMBAACxAAAAEQAFAAoA
EQCNARMAEQC6ARcAEQAEAjkAVoAoAkcABgY1AuAJVoA9AuMJVoBFAuMJUCAAAAAAgxjKARsAAQBY
IAAAAACTCNABHwABAJEgAAAAAJMI5AEkAAEAmCAAAAAAkwjwASkAAQCgIAAAAACWCBQCPQACALMg
AAAAAIYYygEbAAIApyAAAAAAkRjVBCIKAgC8IAAAAACGADACGwACADAjAAAAAIYYygEbAAIAAAAB
AE0COQDKAfEJQQDKAfEJSQDKAfEJUQDKAfEJWQDKAfEJYQDKAfEJaQDKAfEJcQDKAfEJeQDKAfEJ
gQDKAfEJiQDKAfYJkQDKARsAmQDKARsACQDKARsAoQBOBPsJoQBpBAIKKQDKAQcKuQDKARMKyQDK
ARsAEQDKARsA0QDKARsA2QAKBSYK4QAeBSoK6QDKAfEJ6QBdBToK8QB+BT8K+QCrBUQKAQGrBUsK
CQC0BVAK4QC9BVAK4QDCBVQKGQDgBVoKCQHoBfYJCQFABmAKEQGrBWYKGQFXBm0K4QAeBXEKIQHK
AfEJIQF7BnkKKQHKAYEKKQGfBokKMQHKAfEJOQHmBo4KMQEXB5QKMQEnB5sKGQDKARsADgAQAEoA
CAAYAOcJCAAcAOwJKQCTABkKLgAbADULLgAjADULLgBjAKMLLgALAL0KLgATAAULLgAzAAULLgAr
ADsLLgA7AGILLgBDADULLgBbAJoLQwBrAOwJSQCTABkKYQCbAOwJgwCrAOwJDgqiCgIAAQADAAMA
AAB9AS8AAAD8ATQAAAAgAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAAtFa1gAAAA
AAAA4wMAAAQAAAAAAAAAAAAAAAEAvwAAAAAABAAAAAAAAAAAAAAAAQDIAAAAAAALAAAAAAAAAAAA
AAAKAAMBAAAAAAQAAAAAAAAAAAAAADEKJQUAAAAACwAAAAAAAAAAAAAACgD3BQAAAAAAAAAAAQAA
ADYHAAAFAAQAAAAAPE1vZHVsZT4Ac3RfZWVjZTVkMzBkYjk3NDkyZTk0MDExZTc3NGNlNTBhZDIu
ZGxsAFJlc291cmNlcwBTVF9hMzMzYTljNWZmYTM0MWVlOWYwNzc1NzZhZjUwODA2Yy5jc3Byb2ou
UHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2EzMzNhOWM1ZmZhMzQxZWU5ZjA3NzU3
NmFmNTA4MDZjLmNzcHJvagBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lz
dGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNRVNTQUdF
AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHN0X2VlY2U1ZDMwZGI5NzQ5MmU5
NDAxMWU3NzRjZTUwYWQyAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkA
Z2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9y
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBFbnZpcm9ubWVudABnZXRfVXNlck5h
bWUAU3RyaW5nAENvbmNhdABTeXN0ZW0uRGlyZWN0b3J5U2VydmljZXMARGlyZWN0b3J5U2VhcmNo
ZXIAU2VhcmNoUmVzdWx0AEZpbmRPbmUAUmVzdWx0UHJvcGVydHlDb2xsZWN0aW9uAGdldF9Qcm9w
ZXJ0aWVzAFJlc3VsdFByb3BlcnR5VmFsdWVDb2xsZWN0aW9uAGdldF9JdGVtAFRvU3RyaW5nAFRy
aW0Ab3BfRXF1YWxpdHkAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfVmFsdWUAU3lzdGVtLlRl
eHQAU3RyaW5nQnVpbGRlcgBSZXBsYWNlAFN5c3RlbS5OZXQuTWFpbABNYWlsTWVzc2FnZQBzZXRf
SXNCb2R5SHRtbABTbXRwQ2xpZW50AFN5c3RlbS5OZXQAQ3JlZGVudGlhbENhY2hlAE5ldHdvcmtD
cmVkZW50aWFsAGdldF9EZWZhdWx0TmV0d29ya0NyZWRlbnRpYWxzAElDcmVkZW50aWFsc0J5SG9z
dABzZXRfQ3JlZGVudGlhbHMAU2VuZABFeGNlcHRpb24AU1RfYTMzM2E5YzVmZmEzNDFlZTlmMDc3
NTc2YWY1MDgwNmMuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAf1MAVABf
AGEAMwAzADMAYQA5AGMANQBmAGYAYQAzADQAMQBlAGUAOQBmADAANwA3ADUANwA2AGEAZgA1ADAA
OAAwADYAYwAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAABLKAAmACgAbwBiAGoAZQBjAHQAQwBsAGEAcwBzAD0AdQBzAGUAcgApACgAUwBBAE0A
QQBjAGMAbwB1AG4AdABOAGEAbQBlAD0AIAAABSkAKQAACW0AYQBpAGwAAAEAKVUAbgBrAG4AbwB3
AG4AQABpAG0AZwBsAG8AYgBhAGwALgBjAG8AbQAAI1UAcwBlAHIAOgA6AEUAcgByAG8AcgBNAGEA
aQBsAFQAbwAAIVUAcwBlAHIAOgA6AFMATQBUAFAAUwBlAHIAdgBlAHIAACNVAHMAZQByADoAOgBF
AG4AdgBpAHIAbwBuAG0AZQBuAHQAABFQAGEAYwBrAGEAZwBlACAAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAXIABGAGEAaQBsAGUAZAAhACAALQAgAAElUwB5AHMAdABl
AG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBtAGUAACNTAHkAcwB0AGUAbQA6ADoAUwB0AGEAcgB0AFQA
aQBtAGUAADtTAHkAcwB0AGUAbQA6ADoARQB2AGUAbgB0AEgAYQBuAGQAbABlAHIAUwB0AGEAcgB0
AFQAaQBtAGUAADFTAHkAcwB0AGUAbQA6ADoARQByAHIAbwByAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAiZU8ACEARABPAEMAVABZAFAARQAgAEgAVABNAEwAIABQAFUAQgBMAEkAQwAgACcALQAvAC8A
VwAzAEMALwAvAEQAVABEACAASABUAE0ATAAgADQALgAwACAAVAByAGEAbgBzAGkAdABpAG8AbgBh
AGwALwAvAEUATgAnAD4APABIAFQATQBMAD4APABCAE8ARABZAD4APABCAEwATwBDAEsAUQBVAE8A
VABFACAAcwB0AHkAbABlAD0AJwBNAEEAUgBHAEkATgAtAFQATwBQADoAIAAwAHAAeAA7ACAAUABB
AEQARABJAE4ARwAtAEwARQBGAFQAOgAgADEAMABwAHgAOwAgAE0AQQBSAEcASQBOAC0ATABFAEYA
VAA6ACAAMABwAHgAOwAgAFAAQQBEAEQASQBOAEcALQBUAE8AUAA6ACAAMABwAHgAJwA+ADwAQgBS
AD4APABCAD4APABGAE8ATgBUACAAZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4AYQAnACAAYwBvAGwA
bwByAD0AJwAjADQANAA0ADQANAA0ACcAIABzAGkAegBlAD0AJwAyACcAPgAlAGUAcgByAG8AcgBT
AHUAYgBqAGUAYwB0ACUAPAAvAEYATwBOAFQAPgA8AC8AQgA+ADwAQgBSAD4APABCAFIAPgA8AFQA
QQBCAEwARQAgAGIAbwByAGQAZQByAD0AJwAwACcAIABjAGUAbABsAHAAYQBkAGQAaQBuAGcAPQAn
ADAAJwAgAGMAZQBsAGwAcwBwAGEAYwBpAG4AZwA9ACcAMwAnAD4APABUAFIAPgA8AFQARAAgAFcA
SQBEAFQASAA9ADEAMgAwAD4APABCAD4APABGAE8ATgBUACAAZgBhAGMAZQA9ACcAVgBlAHIAZABh
AG4AYQAnACAAYwBvAGwAbwByAD0AJwAjADQANAA0ADQANAA0ACcAIABzAGkAegBlAD0AJwAyACcA
PgBQAGEAYwBrAGEAZwBlACAATgBhAG0AZQA6ADwALwBGAE8ATgBUAD4APAAvAEIAPgA8AC8AVABE
AD4APABUAEQAPgA8AEYATwBOAFQAIABmAGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8A
bABvAHIAPQAnACMANAA0ADQANAA0ADQAJwAgAHMAaQB6AGUAPQAnADIAJwA+ACUAcABhAGMAawBh
AGcAZQBOAGEAbQBlACUAPAAvAEYATwBOAFQAPgA8AC8AVABEAD4APAAvAFQAUgA+ADwAVABSAD4A
PABUAEQAPgA8AEIAPgA8AEYATwBOAFQAIABmAGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABj
AG8AbABvAHIAPQAnACMANAA0ADQANAA0ADQAJwAgAHMAaQB6AGUAPQAnADIAJwA+AFQAYQBzAGsA
IABOAGEAbQBlADoAPAAvAEYATwBOAFQAPgA8AC8AQgA+ADwALwBUAEQAPgA8AFQARAA+ADwARgBP
AE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAgAGMAbwBsAG8AcgA9ACcAIwA0ADQA
NAA0ADQANAAnACAAcwBpAHoAZQA9ACcAMgAnAD4AJQB0AGEAcwBrAE4AYQBtAGUAJQA8AC8ARgBP
AE4AVAA+ADwALwBUAEQAPgA8AC8AVABSAD4APABUAFIAPgA8AFQARAA+ADwAQgA+ADwARgBPAE4A
VAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAgAGMAbwBsAG8AcgA9ACcAIwA0ADQANAA0
ADQANAAnACAAcwBpAHoAZQA9ACcAMgAnAD4AUwB0AGEAcgB0ACAAVABpAG0AZQA6ADwALwBGAE8A
TgBUAD4APAAvAEIAPgA8AC8AVABEAD4APABUAEQAPgA8AEYATwBOAFQAIABmAGEAYwBlAD0AJwBW
AGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIAPQAnACMANAA0ADQANAA0ADQAJwAgAHMAaQB6AGUA
PQAnADIAJwA+ACUAcwB0AGEAcgB0AFQAaQBtAGUAJQA8AC8ARgBPAE4AVAA+ADwALwBUAEQAPgA8
AC8AVABSAD4APABUAFIAPgA8AFQARAA+ADwAQgA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYA
ZQByAGQAYQBuAGEAJwAgAGMAbwBsAG8AcgA9ACcAIwA0ADQANAA0ADQANAAnACAAcwBpAHoAZQA9
ACcAMgAnAD4ARgBhAGkAbAB1AHIAZQAgAFQAaQBtAGUAOgA8AC8ARgBPAE4AVAA+ADwALwBCAD4A
PAAvAFQARAA+ADwAVABEAD4APABGAE8ATgBUACAAZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4AYQAn
ACAAYwBvAGwAbwByAD0AJwAjADQANAA0ADQANAA0ACcAIABzAGkAegBlAD0AJwAyACcAPgAlAGYA
YQBpAGwAdQByAGUAVABpAG0AZQAlADwALwBGAE8ATgBUAD4APAAvAFQARAA+ADwALwBUAFIAPgA8
AFQAUgA+ADwAVABEAD4APABCAD4APABGAE8ATgBUACAAZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4A
YQAnACAAYwBvAGwAbwByAD0AJwAjADQANAA0ADQANAA0ACcAIABzAGkAegBlAD0AJwAyACcAPgBF
AHIAcgBvAHIAIABNAGUAcwBzAGEAZwBlADoAPAAvAEYATwBOAFQAPgA8AC8AQgA+ADwALwBUAEQA
PgA8AFQARAA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAgAGMAbwBs
AG8AcgA9ACcAIwA0ADQANAA0ADQANAAnACAAcwBpAHoAZQA9ACcAMgAnAD4APAAvAEYATwBOAFQA
PgA8AC8AVABEAD4APAAvAFQAUgA+ADwALwBUAEEAQgBMAEUAPgA8AEYATwBOAFQAIABmAGEAYwBl
AD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIAPQAnACMANAA0ADQANAA0ADQAJwAgAHMA
aQB6AGUAPQAnADIAJwA+ACUAZQByAHIAbwByAE0AZQBzAHMAYQBnAGUAJQA8AC8ARgBPAE4AVAA+
ADwAQgBSAD4APAAvAEIATABPAEMASwBRAFUATwBUAEUAPgA8AC8AQgBPAEQAWQA+ADwALwBIAFQA
TQBMAD4AAR0lAGUAcgByAG8AcgBTAHUAYgBqAGUAYwB0ACUAABslAHAAYQBjAGsAYQBnAGUATgBh
AG0AZQAlAAAVJQB0AGEAcwBrAE4AYQBtAGUAJQAAFyUAcwB0AGEAcgB0AFQAaQBtAGUAJQAAGyUA
ZgBhAGkAbAB1AHIAZQBUAGkAbQBlACUAAB0lAGUAcgByAG8AcgBNAGUAcwBzAGEAZwBlACUAAAAA
hEVBYUUjvUuukuBukYRgTwAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZ
BQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYOiZQ8ACEARABPAEMAVABZAFAARQAgAEgA
VABNAEwAIABQAFUAQgBMAEkAQwAgACcALQAvAC8AVwAzAEMALwAvAEQAVABEACAASABUAE0ATAAg
ADQALgAwACAAVAByAGEAbgBzAGkAdABpAG8AbgBhAGwALwAvAEUATgAnAD4APABIAFQATQBMAD4A
PABCAE8ARABZAD4APABCAEwATwBDAEsAUQBVAE8AVABFACAAcwB0AHkAbABlAD0AJwBNAEEAUgBH
AEkATgAtAFQATwBQADoAIAAwAHAAeAA7ACAAUABBAEQARABJAE4ARwAtAEwARQBGAFQAOgAgADEA
MABwAHgAOwAgAE0AQQBSAEcASQBOAC0ATABFAEYAVAA6ACAAMABwAHgAOwAgAFAAQQBEAEQASQBO
AEcALQBUAE8AUAA6ACAAMABwAHgAJwA+ADwAQgBSAD4APABCAD4APABGAE8ATgBUACAAZgBhAGMA
ZQA9ACcAVgBlAHIAZABhAG4AYQAnACAAYwBvAGwAbwByAD0AJwAjADQANAA0ADQANAA0ACcAIABz
AGkAegBlAD0AJwAyACcAPgAlAGUAcgByAG8AcgBTAHUAYgBqAGUAYwB0ACUAPAAvAEYATwBOAFQA
PgA8AC8AQgA+ADwAQgBSAD4APABCAFIAPgA8AFQAQQBCAEwARQAgAGIAbwByAGQAZQByAD0AJwAw
ACcAIABjAGUAbABsAHAAYQBkAGQAaQBuAGcAPQAnADAAJwAgAGMAZQBsAGwAcwBwAGEAYwBpAG4A
ZwA9ACcAMwAnAD4APABUAFIAPgA8AFQARAAgAFcASQBEAFQASAA9ADEAMgAwAD4APABCAD4APABG
AE8ATgBUACAAZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4AYQAnACAAYwBvAGwAbwByAD0AJwAjADQA
NAA0ADQANAA0ACcAIABzAGkAegBlAD0AJwAyACcAPgBQAGEAYwBrAGEAZwBlACAATgBhAG0AZQA6
ADwALwBGAE8ATgBUAD4APAAvAEIAPgA8AC8AVABEAD4APABUAEQAPgA8AEYATwBOAFQAIABmAGEA
YwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIAPQAnACMANAA0ADQANAA0ADQAJwAg
AHMAaQB6AGUAPQAnADIAJwA+ACUAcABhAGMAawBhAGcAZQBOAGEAbQBlACUAPAAvAEYATwBOAFQA
PgA8AC8AVABEAD4APAAvAFQAUgA+ADwAVABSAD4APABUAEQAPgA8AEIAPgA8AEYATwBOAFQAIABm
AGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIAPQAnACMANAA0ADQANAA0ADQA
JwAgAHMAaQB6AGUAPQAnADIAJwA+AFQAYQBzAGsAIABOAGEAbQBlADoAPAAvAEYATwBOAFQAPgA8
AC8AQgA+ADwALwBUAEQAPgA8AFQARAA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQA
YQBuAGEAJwAgAGMAbwBsAG8AcgA9ACcAIwA0ADQANAA0ADQANAAnACAAcwBpAHoAZQA9ACcAMgAn
AD4AJQB0AGEAcwBrAE4AYQBtAGUAJQA8AC8ARgBPAE4AVAA+ADwALwBUAEQAPgA8AC8AVABSAD4A
PABUAFIAPgA8AFQARAA+ADwAQgA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBu
AGEAJwAgAGMAbwBsAG8AcgA9ACcAIwA0ADQANAA0ADQANAAnACAAcwBpAHoAZQA9ACcAMgAnAD4A
UwB0AGEAcgB0ACAAVABpAG0AZQA6ADwALwBGAE8ATgBUAD4APAAvAEIAPgA8AC8AVABEAD4APABU
AEQAPgA8AEYATwBOAFQAIABmAGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8AbABvAHIA
PQAnACMANAA0ADQANAA0ADQAJwAgAHMAaQB6AGUAPQAnADIAJwA+ACUAcwB0AGEAcgB0AFQAaQBt
AGUAJQA8AC8ARgBPAE4AVAA+ADwALwBUAEQAPgA8AC8AVABSAD4APABUAFIAPgA8AFQARAA+ADwA
QgA+ADwARgBPAE4AVAAgAGYAYQBjAGUAPQAnAFYAZQByAGQAYQBuAGEAJwAgAGMAbwBsAG8AcgA9
ACcAIwA0ADQANAA0ADQANAAnACAAcwBpAHoAZQA9ACcAMgAnAD4ARgBhAGkAbAB1AHIAZQAgAFQA
aQBtAGUAOgA8AC8ARgBPAE4AVAA+ADwALwBCAD4APAAvAFQARAA+ADwAVABEAD4APABGAE8ATgBU
ACAAZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4AYQAnACAAYwBvAGwAbwByAD0AJwAjADQANAA0ADQA
NAA0ACcAIABzAGkAegBlAD0AJwAyACcAPgAlAGYAYQBpAGwAdQByAGUAVABpAG0AZQAlADwALwBG
AE8ATgBUAD4APAAvAFQARAA+ADwALwBUAFIAPgA8AFQAUgA+ADwAVABEAD4APABCAD4APABGAE8A
TgBUACAAZgBhAGMAZQA9ACcAVgBlAHIAZABhAG4AYQAnACAAYwBvAGwAbwByAD0AJwAjADQANAA0
ADQANAA0ACcAIABzAGkAegBlAD0AJwAyACcAPgBFAHIAcgBvAHIAIABNAGUAcwBzAGEAZwBlADoA
PAAvAEYATwBOAFQAPgA8AC8AQgA+ADwALwBUAEQAPgA8AFQARAA+ADwARgBPAE4AVAAgAGYAYQBj
AGUAPQAnAFYAZQByAGQAYQBuAGEAJwAgAGMAbwBsAG8AcgA9ACcAIwA0ADQANAA0ADQANAAnACAA
cwBpAHoAZQA9ACcAMgAnAD4APAAvAEYATwBOAFQAPgA8AC8AVABEAD4APAAvAFQAUgA+ADwALwBU
AEEAQgBMAEUAPgA8AEYATwBOAFQAIABmAGEAYwBlAD0AJwBWAGUAcgBkAGEAbgBhACcAIABjAG8A
bABvAHIAPQAnACMANAA0ADQANAA0ADQAJwAgAHMAaQB6AGUAPQAnADIAJwA+ACUAZQByAHIAbwBy
AE0AZQBzAHMAYQBnAGUAJQA8AC8ARgBPAE4AVAA+ADwAQgBSAD4APAAvAEIATABPAEMASwBRAFUA
TwBUAEUAPgA8AC8AQgBPAEQAWQA+ADwALwBIAFQATQBMAD4AAgYIAwYRFAQAAAAABAEAAAAEIAEB
DgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQMAAA4GAAMO
Dg4OCLA/X38R1Qo6BCAAEnkEIAASfQYgARKAgQ4EIAEcCAMgAA4FAAICDg4FIAASgIUFIAASgIkG
IAESgI0cAyAAHAcABA4ODg4OByACEoCRDg4HIAQBDg4ODgQgAQECBQAAEoChBiABARKApQYgAQES
gJUaBxASdRJ5EoCVEoCZEoCRDg4ODg4ODg4ODg5HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU1RfYTMzM2E5
YzVmZmEzNDFlZTlmMDc3NTc2YWY1MDgwNmMuY3Nwcm9qAAAFAQAAAAAmAQAhSW50ZXJuYXRpb25h
bCBNZWRpY2FsIEdyb3VwLCBJbmMuAAA3AQAyQ29weXJpZ2h0IEAgSW50ZXJuYXRpb25hbCBNZWRp
Y2FsIEdyb3VwLCBJbmMuIDIwMTAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEAAChJAAAAAAAAAAAAAD5JAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwSQAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAeAQA
AAAAAAAAAAAAeAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAK1gLRUAAAEArWAtFT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBNgD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAALQDAAABADAAMAAwADAAMAA0AGIAMAAA
AGQAIgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAASQBuAHQAZQByAG4AYQB0AGkAbwBuAGEA
bAAgAE0AZQBkAGkAYwBhAGwAIABHAHIAbwB1AHAALAAgAEkAbgBjAC4AAACAACsAAQBGAGkAbABl
AEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AYQAzADMAMwBhADkAYwA1AGYAZgBhADMA
NAAxAGUAZQA5AGYAMAA3ADcANQA3ADYAYQBmADUAMAA4ADAANgBjAC4AYwBzAHAAcgBvAGoAAAAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADQAMgAxAC4AMgA0ADcA
NAA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAHMAdABfAGUAZQBjAGUANQBk
ADMAMABkAGIAOQA3ADQAOQAyAGUAOQA0ADAAMQAxAGUANwA3ADQAYwBlADUAMABhAGQAMgAuAGQA
bABsAAAAjAAzAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAASQBuAHQAZQByAG4AYQB0AGkAbwBuAGEAbAAgAE0AZQBkAGkAYwBhAGwAIABHAHIA
bwB1AHAALAAgAEkAbgBjAC4AIAAyADAAMQAwAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAcwB0AF8AZQBlAGMAZQA1AGQAMwAwAGQAYgA5ADcANAA5ADIAZQA5ADQA
MAAxADEAZQA3ADcANABjAGUANQAwAGEAZAAyAC4AZABsAGwAAAB4ACsAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGEAMwAzADMAYQA5AGMANQBmAGYAYQAzADQAMQBlAGUAOQBmADAA
NwA3ADUANwA2AGEAZgA1ADAAOAAwADYAYwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBk
AHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADEALgAyADQANwA0ADkAAAAAAEgA
DwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANAAyADEALgAy
ADQANwA0ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAFA5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="203,44"
          Id="Package\Create Split Function"
          TopLeft="24.6226415094343,5.5" />
        <NodeLayout
          Size="203,44"
          Id="Package\Create Temp Table"
          TopLeft="24.6226415094343,94.5896226415095" />
        <NodeLayout
          Size="203,44"
          Id="Package\Drop Split Function"
          TopLeft="269.622641509434,94.5896226415095" />
        <NodeLayout
          Size="203,44"
          Id="Package\Drop Temp Table"
          TopLeft="269.622641509434,183.679245283019" />
        <NodeLayout
          Size="203,44"
          Id="Package\Generate InsuredID List"
          TopLeft="269.622641509434,361.858490566038" />
        <NodeLayout
          Size="203,44"
          Id="Package\Generate Validation Script"
          TopLeft="24.6226415094343,272.768867924528" />
        <NodeLayout
          Size="203,44"
          Id="Package\Load InsuredID List"
          TopLeft="24.6226415094343,183.679245283019" />
        <NodeLayout
          Size="203,44"
          Id="Package\Output To Generator File"
          TopLeft="269.622641509434,272.768867924528" />
        <NodeLayout
          Size="203,44"
          Id="Package\Output To Validation File"
          TopLeft="24.6226415094343,361.858490566038" />
        <NodeLayout
          Size="179,44"
          Id="Package\Sample To Add Email Attachment"
          TopLeft="885.622641509434,66.2547169811321" />
        <NodeLayout
          Size="179,44"
          Id="Package\Send Success Email"
          TopLeft="885.622641509434,134.632075471698" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="126.122641509434,138.589622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.0896226415095"
              Start="0,0"
              End="0,37.5896226415095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5896226415095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="126.122641509434,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.0896226415095"
              Start="0,0"
              End="0,37.5896226415095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5896226415095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="371.122641509434,183.679245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-45.0896226415095"
              Start="0,0"
              End="0,-37.5896226415095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-37.5896226415095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="126.122641509434,227.679245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.0896226415095"
              Start="0,0"
              End="0,37.5896226415095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5896226415095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="126.122641509434,316.768867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.0896226415095"
              Start="0,0"
              End="0,37.5896226415095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5896226415095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="227.622641509434,383.858490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42,0"
              Start="0,0"
              End="34.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="371.122641509434,361.858490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-45.0896226415095"
              Start="0,0"
              End="0,-37.5896226415095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-37.5896226415095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="371.122641509434,272.768867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-45.0896226415095"
              Start="0,0"
              End="0,-37.5896226415095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-37.5896226415095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="135.773584905661,43.9245283018868"
          Id="Package.EventHandlers[OnError]\Send Failure Email"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Load InsuredID List">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="173,42"
          Id="Package\Load InsuredID List\Source File"
          TopLeft="191,71" />
        <NodeLayout
          Size="173,42"
          Id="Package\Load InsuredID List\OLE DB Destination"
          TopLeft="191,203" />
        <EdgeLayout
          Id="Package\Load InsuredID List.Paths[Output 0]"
          TopLeft="277.5,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,90"
              Start="0,0"
              End="0,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load InsuredID List\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>